
TEST17_TIMER0_LED_FLOW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000526  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000526  000005ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000005ba  2**0
                  ALLOC
  3 .stab         00001890  00000000  00000000  000005bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000051f  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00002370  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000574  00000000  00000000  000023f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000013d  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002f8  00000000  00000000  00002aa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  00002d9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000363  00000000  00000000  00002ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001d6  00000000  00000000  0000322f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 36       	cpi	r26, 0x61	; 97
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 26 01 	call	0x24c	; 0x24c <main>
  8a:	0c 94 91 02 	jmp	0x522	; 0x522 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z12delay_reducel>:

#ifndef LIB_DELAY_H_
#define LIB_DELAY_H_

void delay_reduce(long int delay)
{
  92:	dc 01       	movw	r26, r24
  94:	cb 01       	movw	r24, r22
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  96:	00 97       	sbiw	r24, 0x00	; 0
  98:	a1 05       	cpc	r26, r1
  9a:	b1 05       	cpc	r27, r1
  9c:	41 f0       	breq	.+16     	; 0xae <_Z12delay_reducel+0x1c>
	{
		delay--;
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	a1 09       	sbc	r26, r1
  a2:	b1 09       	sbc	r27, r1
		asm volatile ("nop");
  a4:	00 00       	nop
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  a6:	00 97       	sbiw	r24, 0x00	; 0
  a8:	a1 05       	cpc	r26, r1
  aa:	b1 05       	cpc	r27, r1
  ac:	c1 f7       	brne	.-16     	; 0x9e <_Z12delay_reducel+0xc>
  ae:	08 95       	ret

000000b0 <_Z12delay_secondi>:

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	41 f4       	brne	.+16     	; 0xc4 <_Z12delay_secondi+0x14>
  b4:	08 95       	ret
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	30 40       	sbci	r19, 0x00	; 0
	{
		for(j=65535;j!=0;j--);
  ba:	e9 f7       	brne	.-6      	; 0xb6 <_Z12delay_secondi+0x6>
		{
			asm volatile ("nop");
  bc:	00 00       	nop

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	19 f4       	brne	.+6      	; 0xc8 <_Z12delay_secondi+0x18>
  c2:	08 95       	ret
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  c4:	4f ef       	ldi	r20, 0xFF	; 255
  c6:	5f ef       	ldi	r21, 0xFF	; 255
  c8:	9a 01       	movw	r18, r20
  ca:	f5 cf       	rjmp	.-22     	; 0xb6 <_Z12delay_secondi+0x6>

000000cc <_Z8LED_INITv>:

//************初始化
void LED_INIT()
{
	
	LED_DDR = 0XFF;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8a bb       	out	0x1a, r24	; 26
	
	LED_PORT = 0X00;
  d0:	1b ba       	out	0x1b, r1	; 27
	
	
}
  d2:	08 95       	ret

000000d4 <_Z9LED_TWINKh>:


//********指定位取反
void LED_TWINK(uchar num)
{
	LED_PORT ^= 1 << num;//********指定位取反
  d4:	4b b3       	in	r20, 0x1b	; 27
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	b9 01       	movw	r22, r18
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <_Z9LED_TWINKh+0xe>
  de:	66 0f       	add	r22, r22
  e0:	77 1f       	adc	r23, r23
  e2:	8a 95       	dec	r24
  e4:	e2 f7       	brpl	.-8      	; 0xde <_Z9LED_TWINKh+0xa>
  e6:	cb 01       	movw	r24, r22
  e8:	84 27       	eor	r24, r20
  ea:	8b bb       	out	0x1b, r24	; 27
}
  ec:	08 95       	ret

000000ee <_Z9LED_BLINKhh>:


//****************指定位闪烁
void LED_BLINK(uchar num,uchar time)
{
  ee:	0f 93       	push	r16
  f0:	1f 93       	push	r17
  f2:	cf 93       	push	r28
  f4:	c6 2f       	mov	r28, r22
	LED_DDR |= 1 << num;//******指定位为输出
  f6:	9a b3       	in	r25, 0x1a	; 26
  f8:	01 e0       	ldi	r16, 0x01	; 1
  fa:	10 e0       	ldi	r17, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <_Z9LED_BLINKhh+0x14>
  fe:	00 0f       	add	r16, r16
 100:	11 1f       	adc	r17, r17
 102:	8a 95       	dec	r24
 104:	e2 f7       	brpl	.-8      	; 0xfe <_Z9LED_BLINKhh+0x10>
 106:	80 2f       	mov	r24, r16
 108:	90 2b       	or	r25, r16
 10a:	9a bb       	out	0x1a, r25	; 26
	
	LED_PORT |= 1 << num;//********指定位为点亮
 10c:	9b b3       	in	r25, 0x1b	; 27
 10e:	89 2b       	or	r24, r25
 110:	8b bb       	out	0x1b, r24	; 27
	
	delay_second(time);
 112:	86 2f       	mov	r24, r22
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
	
	LED_PORT &= ~(1 << num);//*******指定位为灭
 11a:	8b b3       	in	r24, 0x1b	; 27
 11c:	00 95       	com	r16
 11e:	08 23       	and	r16, r24
 120:	0b bb       	out	0x1b, r16	; 27
	
	delay_second(time);
 122:	8c 2f       	mov	r24, r28
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
	
	
}
 12a:	cf 91       	pop	r28
 12c:	1f 91       	pop	r17
 12e:	0f 91       	pop	r16
 130:	08 95       	ret

00000132 <_Z8LED_FLOWv>:


/*********************流水灯*********************/

void LED_FLOW()
{
 132:	cf 93       	push	r28
	LED_DDR = 0XFF;
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	8a bb       	out	0x1a, r24	; 26
	LED_PORT = 0x01;
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	c8 e0       	ldi	r28, 0x08	; 8
	for(uchar K = 0;K < 8;K ++)
	{
		delay_second(5);
 13e:	85 e0       	ldi	r24, 0x05	; 5
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
		
		LED_PORT = LED_PORT <<1;
 146:	8b b3       	in	r24, 0x1b	; 27
 148:	88 0f       	add	r24, r24
 14a:	8b bb       	out	0x1b, r24	; 27
 14c:	c1 50       	subi	r28, 0x01	; 1

void LED_FLOW()
{
	LED_DDR = 0XFF;
	LED_PORT = 0x01;
	for(uchar K = 0;K < 8;K ++)
 14e:	b9 f7       	brne	.-18     	; 0x13e <_Z8LED_FLOWv+0xc>
		LED_PORT = LED_PORT <<1;
		
		
		 
	}
}
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <_Z22TIMER0_NORMAL_PWM_INITv>:
//**************************************************************

void TIMER0_NORMAL_PWM_INIT()
{
	//端口初始化
	PWM_TIMER0_DDR |= (1 << PWM_TIMER0_OUT); 
 154:	bb 9a       	sbi	0x17, 3	; 23
	//计数器初始化
	TCNT0=0x00;OCR0 = 0X01;//***避免与bottom相同时候特殊情况
 156:	12 be       	out	0x32, r1	; 50
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	8c bf       	out	0x3c, r24	; 60
	//中断初始化
	TIMSK |= 1 << TOIE0;
 15c:	89 b7       	in	r24, 0x39	; 57
 15e:	81 60       	ori	r24, 0x01	; 1
 160:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR0 |= (1 << COM00) | (1 << CS00) | (1 << CS02);//设置为普通PWM；匹配时将取反；1024分频
 162:	83 b7       	in	r24, 0x33	; 51
 164:	85 61       	ori	r24, 0x15	; 21
 166:	83 bf       	out	0x33, r24	; 51
	
	
}
 168:	08 95       	ret

0000016a <_Z27TIMER0_NORMAL_PWM_TCNT0_setf>:
//**************************************************************


void TIMER0_NORMAL_PWM_TCNT0_set(float compare_time)
{
	TCNT0 = 256 - F_CPU/1024 * compare_time;
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	41 ee       	ldi	r20, 0xE1	; 225
 170:	55 e4       	ldi	r21, 0x45	; 69
 172:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
 176:	9b 01       	movw	r18, r22
 178:	ac 01       	movw	r20, r24
 17a:	60 e0       	ldi	r22, 0x00	; 0
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	80 e8       	ldi	r24, 0x80	; 128
 180:	93 e4       	ldi	r25, 0x43	; 67
 182:	0e 94 4c 01 	call	0x298	; 0x298 <__subsf3>
 186:	0e 94 b1 01 	call	0x362	; 0x362 <__fixunssfsi>
 18a:	62 bf       	out	0x32, r22	; 50
	
}
 18c:	08 95       	ret

0000018e <_Z24TIMER0_NORMAL_PWM_SEARCHv>:
//*****************F_CPU/1024 * compare_time 不大于255******
//**************一般compare_time取0.01 在中断中累加或者用TIMER1
//**************************************************************
void TIMER0_NORMAL_PWM_SEARCH()
{
	while(!(TIFR & ~(1 << TOV0)));//***********等待置位
 18e:	88 b7       	in	r24, 0x38	; 56
 190:	8e 7f       	andi	r24, 0xFE	; 254
 192:	e9 f3       	breq	.-6      	; 0x18e <_Z24TIMER0_NORMAL_PWM_SEARCHv>
	
	TIFR |= 1 << TOV0;//***************写1清零
 194:	88 b7       	in	r24, 0x38	; 56
 196:	81 60       	ori	r24, 0x01	; 1
 198:	88 bf       	out	0x38, r24	; 56
	
	
	
}
 19a:	08 95       	ret

0000019c <_Z24TIMER0_FASTPWM_OCR0_initv>:

//**********************FAST PWM OCR0模式初始化*******************//
void TIMER0_FASTPWM_OCR0_init()
{
	//端口初始化
	PWM_TIMER0_DDR|=(1<<PWM_TIMER0_OUT); 
 19c:	bb 9a       	sbi	0x17, 3	; 23
	//计数器初始化
	TCNT0=0x00;OCR0 = 0X01;//***避免与bottom相同时候特殊情况
 19e:	12 be       	out	0x32, r1	; 50
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	8c bf       	out	0x3c, r24	; 60
	//中断初始化
	TIMSK |= (1<<OCIE0)|(1<<TOIE0);
 1a4:	89 b7       	in	r24, 0x39	; 57
 1a6:	83 60       	ori	r24, 0x03	; 3
 1a8:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR0 |= (1 << WGM00) | (1 << WGM01) | (1 << COM01) | (1 << COM00) | (1 << CS01);//设置为快速PWM；与OCR0匹配时将清零；8分频
 1aa:	83 b7       	in	r24, 0x33	; 51
 1ac:	8a 67       	ori	r24, 0x7A	; 122
 1ae:	83 bf       	out	0x33, r24	; 51
	
	
}
 1b0:	08 95       	ret

000001b2 <_Z24TIMER0_FASTPWMA_OCR0_setf>:
//********************FAST PWM ICR0模式时间设定*********************//
void TIMER0_FASTPWMA_OCR0_set(float compare_time)
{
	OCR0=F_CPU/8*compare_time;
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	41 e6       	ldi	r20, 0x61	; 97
 1b8:	59 e4       	ldi	r21, 0x49	; 73
 1ba:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
 1be:	0e 94 b1 01 	call	0x362	; 0x362 <__fixunssfsi>
 1c2:	6c bf       	out	0x3c, r22	; 60
	
}
 1c4:	08 95       	ret

000001c6 <_Z25TIMER1_FASTPWMA_ICR1_initv>:

//**********************FAST PWM ICR1模式初始化*******************//
void TIMER1_FASTPWMA_ICR1_init()
{
	//端口初始化
	PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
 1c6:	8d 9a       	sbi	0x11, 5	; 17
 1c8:	95 98       	cbi	0x12, 5	; 18
	//计数器初始化
	TCNT1 = 0x00;
 1ca:	1d bc       	out	0x2d, r1	; 45
 1cc:	1c bc       	out	0x2c, r1	; 44
	//中断初始化
	TIMSK |= (1<<OCIE1A)|(1<<TOIE1);
 1ce:	89 b7       	in	r24, 0x39	; 57
 1d0:	84 61       	ori	r24, 0x14	; 20
 1d2:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR1A |= (1<<COM1A1)|(1<<WGM11);//比较匹配清零 TOP置位 
 1d4:	8f b5       	in	r24, 0x2f	; 47
 1d6:	82 68       	ori	r24, 0x82	; 130
 1d8:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS12);//TOP为ICR1的值 1024分频
 1da:	8e b5       	in	r24, 0x2e	; 46
 1dc:	8d 61       	ori	r24, 0x1D	; 29
 1de:	8e bd       	out	0x2e, r24	; 46
	
	
}
 1e0:	08 95       	ret

000001e2 <_Z24TIMER1_FASTPWMA_ICR1_setff>:
//********************FAST PWM ICR1模式时间设定*********************//
void TIMER1_FASTPWMA_ICR1_set(float compare_time,float top_time)
{
 1e2:	cf 92       	push	r12
 1e4:	df 92       	push	r13
 1e6:	ef 92       	push	r14
 1e8:	ff 92       	push	r15
 1ea:	69 01       	movw	r12, r18
 1ec:	7a 01       	movw	r14, r20
	OCR1A=F_CPU/1024*compare_time;
 1ee:	20 e0       	ldi	r18, 0x00	; 0
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	41 ee       	ldi	r20, 0xE1	; 225
 1f4:	55 e4       	ldi	r21, 0x45	; 69
 1f6:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
 1fa:	0e 94 b1 01 	call	0x362	; 0x362 <__fixunssfsi>
 1fe:	dc 01       	movw	r26, r24
 200:	cb 01       	movw	r24, r22
 202:	9b bd       	out	0x2b, r25	; 43
 204:	8a bd       	out	0x2a, r24	; 42
	ICR1=F_CPU/1024*top_time;
 206:	c7 01       	movw	r24, r14
 208:	b6 01       	movw	r22, r12
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	41 ee       	ldi	r20, 0xE1	; 225
 210:	55 e4       	ldi	r21, 0x45	; 69
 212:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
 216:	0e 94 b1 01 	call	0x362	; 0x362 <__fixunssfsi>
 21a:	dc 01       	movw	r26, r24
 21c:	cb 01       	movw	r24, r22
 21e:	97 bd       	out	0x27, r25	; 39
 220:	86 bd       	out	0x26, r24	; 38
}
 222:	ff 90       	pop	r15
 224:	ef 90       	pop	r14
 226:	df 90       	pop	r13
 228:	cf 90       	pop	r12
 22a:	08 95       	ret

0000022c <_Z31TIMER1_PHASE_CORRECTION_10_initv>:

//**********************十位相位修正PWM模式初始化*******************//
void TIMER1_PHASE_CORRECTION_10_init()
{
	//端口初始化
	PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
 22c:	8d 9a       	sbi	0x11, 5	; 17
 22e:	95 98       	cbi	0x12, 5	; 18
	//计数器初始化
	TCNT1 = 0x00;OCR1A = 0X00;
 230:	1d bc       	out	0x2d, r1	; 45
 232:	1c bc       	out	0x2c, r1	; 44
 234:	1b bc       	out	0x2b, r1	; 43
 236:	1a bc       	out	0x2a, r1	; 42
	//中断初始化
	TIMSK |= (1<<OCIE1A)|(1<<TOIE1);
 238:	89 b7       	in	r24, 0x39	; 57
 23a:	84 61       	ori	r24, 0x14	; 20
 23c:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR1A |= (1<<COM1A1)|(1<<WGM11)|(1<<WGM10);//比较匹配清零 TOP置位
 23e:	8f b5       	in	r24, 0x2f	; 47
 240:	83 68       	ori	r24, 0x83	; 131
 242:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<CS11);//TOP为ICR1的值 8分频
 244:	8e b5       	in	r24, 0x2e	; 46
 246:	82 60       	ori	r24, 0x02	; 2
 248:	8e bd       	out	0x2e, r24	; 46
	
	
}
 24a:	08 95       	ret

0000024c <main>:
uchar TIME_COUNT = 0;


int main(void)
{
	TIMER0_NORMAL_PWM_INIT();
 24c:	0e 94 aa 00 	call	0x154	; 0x154 <_Z22TIMER0_NORMAL_PWM_INITv>
	
	LED_INIT();
 250:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8LED_INITv>
	
	LED_PORT = 0X01;
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	8b bb       	out	0x1b, r24	; 27
	
	TIMER0_NORMAL_PWM_TCNT0_set(0.01);
 258:	6a e0       	ldi	r22, 0x0A	; 10
 25a:	77 ed       	ldi	r23, 0xD7	; 215
 25c:	83 e2       	ldi	r24, 0x23	; 35
 25e:	9c e3       	ldi	r25, 0x3C	; 60
 260:	0e 94 b5 00 	call	0x16a	; 0x16a <_Z27TIMER0_NORMAL_PWM_TCNT0_setf>
		    
		   LED_PORT = LED_PORT << 1;
		   
		   if (LED_PORT == 0X00)
		   {
			   LED_PORT = 0X01;
 264:	c1 e0       	ldi	r28, 0x01	; 1
	
	TIMER0_NORMAL_PWM_TCNT0_set(0.01);
	
    while(1)
    {
       TIMER0_NORMAL_PWM_SEARCH();
 266:	0e 94 c7 00 	call	0x18e	; 0x18e <_Z24TIMER0_NORMAL_PWM_SEARCHv>
	   
	   TIMER0_NORMAL_PWM_TCNT0_set(0.01);
 26a:	6a e0       	ldi	r22, 0x0A	; 10
 26c:	77 ed       	ldi	r23, 0xD7	; 215
 26e:	83 e2       	ldi	r24, 0x23	; 35
 270:	9c e3       	ldi	r25, 0x3C	; 60
 272:	0e 94 b5 00 	call	0x16a	; 0x16a <_Z27TIMER0_NORMAL_PWM_TCNT0_setf>
	   
	   ++ TIME_COUNT;
 276:	80 91 60 00 	lds	r24, 0x0060
 27a:	8f 5f       	subi	r24, 0xFF	; 255
 27c:	80 93 60 00 	sts	0x0060, r24
	   
	   if (TIME_COUNT == 50)
 280:	82 33       	cpi	r24, 0x32	; 50
 282:	89 f7       	brne	.-30     	; 0x266 <main+0x1a>
	   {
		   TIME_COUNT = 0;
 284:	10 92 60 00 	sts	0x0060, r1
		    
		   LED_PORT = LED_PORT << 1;
 288:	8b b3       	in	r24, 0x1b	; 27
 28a:	88 0f       	add	r24, r24
 28c:	8b bb       	out	0x1b, r24	; 27
		   
		   if (LED_PORT == 0X00)
 28e:	8b b3       	in	r24, 0x1b	; 27
 290:	88 23       	and	r24, r24
 292:	49 f7       	brne	.-46     	; 0x266 <main+0x1a>
		   {
			   LED_PORT = 0X01;
 294:	cb bb       	out	0x1b, r28	; 27
 296:	e7 cf       	rjmp	.-50     	; 0x266 <main+0x1a>

00000298 <__subsf3>:
 298:	50 58       	subi	r21, 0x80	; 128

0000029a <__addsf3>:
 29a:	bb 27       	eor	r27, r27
 29c:	aa 27       	eor	r26, r26
 29e:	0e d0       	rcall	.+28     	; 0x2bc <__addsf3x>
 2a0:	a3 c0       	rjmp	.+326    	; 0x3e8 <__fp_round>
 2a2:	94 d0       	rcall	.+296    	; 0x3cc <__fp_pscA>
 2a4:	30 f0       	brcs	.+12     	; 0x2b2 <__addsf3+0x18>
 2a6:	99 d0       	rcall	.+306    	; 0x3da <__fp_pscB>
 2a8:	20 f0       	brcs	.+8      	; 0x2b2 <__addsf3+0x18>
 2aa:	31 f4       	brne	.+12     	; 0x2b8 <__addsf3+0x1e>
 2ac:	9f 3f       	cpi	r25, 0xFF	; 255
 2ae:	11 f4       	brne	.+4      	; 0x2b4 <__addsf3+0x1a>
 2b0:	1e f4       	brtc	.+6      	; 0x2b8 <__addsf3+0x1e>
 2b2:	89 c0       	rjmp	.+274    	; 0x3c6 <__fp_nan>
 2b4:	0e f4       	brtc	.+2      	; 0x2b8 <__addsf3+0x1e>
 2b6:	e0 95       	com	r30
 2b8:	e7 fb       	bst	r30, 7
 2ba:	7f c0       	rjmp	.+254    	; 0x3ba <__fp_inf>

000002bc <__addsf3x>:
 2bc:	e9 2f       	mov	r30, r25
 2be:	a5 d0       	rcall	.+330    	; 0x40a <__fp_split3>
 2c0:	80 f3       	brcs	.-32     	; 0x2a2 <__addsf3+0x8>
 2c2:	ba 17       	cp	r27, r26
 2c4:	62 07       	cpc	r22, r18
 2c6:	73 07       	cpc	r23, r19
 2c8:	84 07       	cpc	r24, r20
 2ca:	95 07       	cpc	r25, r21
 2cc:	18 f0       	brcs	.+6      	; 0x2d4 <__addsf3x+0x18>
 2ce:	71 f4       	brne	.+28     	; 0x2ec <__addsf3x+0x30>
 2d0:	9e f5       	brtc	.+102    	; 0x338 <__addsf3x+0x7c>
 2d2:	bd c0       	rjmp	.+378    	; 0x44e <__fp_zero>
 2d4:	0e f4       	brtc	.+2      	; 0x2d8 <__addsf3x+0x1c>
 2d6:	e0 95       	com	r30
 2d8:	0b 2e       	mov	r0, r27
 2da:	ba 2f       	mov	r27, r26
 2dc:	a0 2d       	mov	r26, r0
 2de:	0b 01       	movw	r0, r22
 2e0:	b9 01       	movw	r22, r18
 2e2:	90 01       	movw	r18, r0
 2e4:	0c 01       	movw	r0, r24
 2e6:	ca 01       	movw	r24, r20
 2e8:	a0 01       	movw	r20, r0
 2ea:	11 24       	eor	r1, r1
 2ec:	ff 27       	eor	r31, r31
 2ee:	59 1b       	sub	r21, r25
 2f0:	99 f0       	breq	.+38     	; 0x318 <__addsf3x+0x5c>
 2f2:	59 3f       	cpi	r21, 0xF9	; 249
 2f4:	50 f4       	brcc	.+20     	; 0x30a <__addsf3x+0x4e>
 2f6:	50 3e       	cpi	r21, 0xE0	; 224
 2f8:	68 f1       	brcs	.+90     	; 0x354 <__addsf3x+0x98>
 2fa:	1a 16       	cp	r1, r26
 2fc:	f0 40       	sbci	r31, 0x00	; 0
 2fe:	a2 2f       	mov	r26, r18
 300:	23 2f       	mov	r18, r19
 302:	34 2f       	mov	r19, r20
 304:	44 27       	eor	r20, r20
 306:	58 5f       	subi	r21, 0xF8	; 248
 308:	f3 cf       	rjmp	.-26     	; 0x2f0 <__addsf3x+0x34>
 30a:	46 95       	lsr	r20
 30c:	37 95       	ror	r19
 30e:	27 95       	ror	r18
 310:	a7 95       	ror	r26
 312:	f0 40       	sbci	r31, 0x00	; 0
 314:	53 95       	inc	r21
 316:	c9 f7       	brne	.-14     	; 0x30a <__addsf3x+0x4e>
 318:	7e f4       	brtc	.+30     	; 0x338 <__addsf3x+0x7c>
 31a:	1f 16       	cp	r1, r31
 31c:	ba 0b       	sbc	r27, r26
 31e:	62 0b       	sbc	r22, r18
 320:	73 0b       	sbc	r23, r19
 322:	84 0b       	sbc	r24, r20
 324:	ba f0       	brmi	.+46     	; 0x354 <__addsf3x+0x98>
 326:	91 50       	subi	r25, 0x01	; 1
 328:	a1 f0       	breq	.+40     	; 0x352 <__addsf3x+0x96>
 32a:	ff 0f       	add	r31, r31
 32c:	bb 1f       	adc	r27, r27
 32e:	66 1f       	adc	r22, r22
 330:	77 1f       	adc	r23, r23
 332:	88 1f       	adc	r24, r24
 334:	c2 f7       	brpl	.-16     	; 0x326 <__addsf3x+0x6a>
 336:	0e c0       	rjmp	.+28     	; 0x354 <__addsf3x+0x98>
 338:	ba 0f       	add	r27, r26
 33a:	62 1f       	adc	r22, r18
 33c:	73 1f       	adc	r23, r19
 33e:	84 1f       	adc	r24, r20
 340:	48 f4       	brcc	.+18     	; 0x354 <__addsf3x+0x98>
 342:	87 95       	ror	r24
 344:	77 95       	ror	r23
 346:	67 95       	ror	r22
 348:	b7 95       	ror	r27
 34a:	f7 95       	ror	r31
 34c:	9e 3f       	cpi	r25, 0xFE	; 254
 34e:	08 f0       	brcs	.+2      	; 0x352 <__addsf3x+0x96>
 350:	b3 cf       	rjmp	.-154    	; 0x2b8 <__addsf3+0x1e>
 352:	93 95       	inc	r25
 354:	88 0f       	add	r24, r24
 356:	08 f0       	brcs	.+2      	; 0x35a <__addsf3x+0x9e>
 358:	99 27       	eor	r25, r25
 35a:	ee 0f       	add	r30, r30
 35c:	97 95       	ror	r25
 35e:	87 95       	ror	r24
 360:	08 95       	ret

00000362 <__fixunssfsi>:
 362:	5b d0       	rcall	.+182    	; 0x41a <__fp_splitA>
 364:	88 f0       	brcs	.+34     	; 0x388 <__fixunssfsi+0x26>
 366:	9f 57       	subi	r25, 0x7F	; 127
 368:	90 f0       	brcs	.+36     	; 0x38e <__fixunssfsi+0x2c>
 36a:	b9 2f       	mov	r27, r25
 36c:	99 27       	eor	r25, r25
 36e:	b7 51       	subi	r27, 0x17	; 23
 370:	a0 f0       	brcs	.+40     	; 0x39a <__fixunssfsi+0x38>
 372:	d1 f0       	breq	.+52     	; 0x3a8 <__fixunssfsi+0x46>
 374:	66 0f       	add	r22, r22
 376:	77 1f       	adc	r23, r23
 378:	88 1f       	adc	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	1a f0       	brmi	.+6      	; 0x384 <__fixunssfsi+0x22>
 37e:	ba 95       	dec	r27
 380:	c9 f7       	brne	.-14     	; 0x374 <__fixunssfsi+0x12>
 382:	12 c0       	rjmp	.+36     	; 0x3a8 <__fixunssfsi+0x46>
 384:	b1 30       	cpi	r27, 0x01	; 1
 386:	81 f0       	breq	.+32     	; 0x3a8 <__fixunssfsi+0x46>
 388:	62 d0       	rcall	.+196    	; 0x44e <__fp_zero>
 38a:	b1 e0       	ldi	r27, 0x01	; 1
 38c:	08 95       	ret
 38e:	5f c0       	rjmp	.+190    	; 0x44e <__fp_zero>
 390:	67 2f       	mov	r22, r23
 392:	78 2f       	mov	r23, r24
 394:	88 27       	eor	r24, r24
 396:	b8 5f       	subi	r27, 0xF8	; 248
 398:	39 f0       	breq	.+14     	; 0x3a8 <__fixunssfsi+0x46>
 39a:	b9 3f       	cpi	r27, 0xF9	; 249
 39c:	cc f3       	brlt	.-14     	; 0x390 <__fixunssfsi+0x2e>
 39e:	86 95       	lsr	r24
 3a0:	77 95       	ror	r23
 3a2:	67 95       	ror	r22
 3a4:	b3 95       	inc	r27
 3a6:	d9 f7       	brne	.-10     	; 0x39e <__fixunssfsi+0x3c>
 3a8:	3e f4       	brtc	.+14     	; 0x3b8 <__fixunssfsi+0x56>
 3aa:	90 95       	com	r25
 3ac:	80 95       	com	r24
 3ae:	70 95       	com	r23
 3b0:	61 95       	neg	r22
 3b2:	7f 4f       	sbci	r23, 0xFF	; 255
 3b4:	8f 4f       	sbci	r24, 0xFF	; 255
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	08 95       	ret

000003ba <__fp_inf>:
 3ba:	97 f9       	bld	r25, 7
 3bc:	9f 67       	ori	r25, 0x7F	; 127
 3be:	80 e8       	ldi	r24, 0x80	; 128
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	08 95       	ret

000003c6 <__fp_nan>:
 3c6:	9f ef       	ldi	r25, 0xFF	; 255
 3c8:	80 ec       	ldi	r24, 0xC0	; 192
 3ca:	08 95       	ret

000003cc <__fp_pscA>:
 3cc:	00 24       	eor	r0, r0
 3ce:	0a 94       	dec	r0
 3d0:	16 16       	cp	r1, r22
 3d2:	17 06       	cpc	r1, r23
 3d4:	18 06       	cpc	r1, r24
 3d6:	09 06       	cpc	r0, r25
 3d8:	08 95       	ret

000003da <__fp_pscB>:
 3da:	00 24       	eor	r0, r0
 3dc:	0a 94       	dec	r0
 3de:	12 16       	cp	r1, r18
 3e0:	13 06       	cpc	r1, r19
 3e2:	14 06       	cpc	r1, r20
 3e4:	05 06       	cpc	r0, r21
 3e6:	08 95       	ret

000003e8 <__fp_round>:
 3e8:	09 2e       	mov	r0, r25
 3ea:	03 94       	inc	r0
 3ec:	00 0c       	add	r0, r0
 3ee:	11 f4       	brne	.+4      	; 0x3f4 <__fp_round+0xc>
 3f0:	88 23       	and	r24, r24
 3f2:	52 f0       	brmi	.+20     	; 0x408 <__fp_round+0x20>
 3f4:	bb 0f       	add	r27, r27
 3f6:	40 f4       	brcc	.+16     	; 0x408 <__fp_round+0x20>
 3f8:	bf 2b       	or	r27, r31
 3fa:	11 f4       	brne	.+4      	; 0x400 <__fp_round+0x18>
 3fc:	60 ff       	sbrs	r22, 0
 3fe:	04 c0       	rjmp	.+8      	; 0x408 <__fp_round+0x20>
 400:	6f 5f       	subi	r22, 0xFF	; 255
 402:	7f 4f       	sbci	r23, 0xFF	; 255
 404:	8f 4f       	sbci	r24, 0xFF	; 255
 406:	9f 4f       	sbci	r25, 0xFF	; 255
 408:	08 95       	ret

0000040a <__fp_split3>:
 40a:	57 fd       	sbrc	r21, 7
 40c:	90 58       	subi	r25, 0x80	; 128
 40e:	44 0f       	add	r20, r20
 410:	55 1f       	adc	r21, r21
 412:	59 f0       	breq	.+22     	; 0x42a <__fp_splitA+0x10>
 414:	5f 3f       	cpi	r21, 0xFF	; 255
 416:	71 f0       	breq	.+28     	; 0x434 <__fp_splitA+0x1a>
 418:	47 95       	ror	r20

0000041a <__fp_splitA>:
 41a:	88 0f       	add	r24, r24
 41c:	97 fb       	bst	r25, 7
 41e:	99 1f       	adc	r25, r25
 420:	61 f0       	breq	.+24     	; 0x43a <__fp_splitA+0x20>
 422:	9f 3f       	cpi	r25, 0xFF	; 255
 424:	79 f0       	breq	.+30     	; 0x444 <__fp_splitA+0x2a>
 426:	87 95       	ror	r24
 428:	08 95       	ret
 42a:	12 16       	cp	r1, r18
 42c:	13 06       	cpc	r1, r19
 42e:	14 06       	cpc	r1, r20
 430:	55 1f       	adc	r21, r21
 432:	f2 cf       	rjmp	.-28     	; 0x418 <__fp_split3+0xe>
 434:	46 95       	lsr	r20
 436:	f1 df       	rcall	.-30     	; 0x41a <__fp_splitA>
 438:	08 c0       	rjmp	.+16     	; 0x44a <__fp_splitA+0x30>
 43a:	16 16       	cp	r1, r22
 43c:	17 06       	cpc	r1, r23
 43e:	18 06       	cpc	r1, r24
 440:	99 1f       	adc	r25, r25
 442:	f1 cf       	rjmp	.-30     	; 0x426 <__fp_splitA+0xc>
 444:	86 95       	lsr	r24
 446:	71 05       	cpc	r23, r1
 448:	61 05       	cpc	r22, r1
 44a:	08 94       	sec
 44c:	08 95       	ret

0000044e <__fp_zero>:
 44e:	e8 94       	clt

00000450 <__fp_szero>:
 450:	bb 27       	eor	r27, r27
 452:	66 27       	eor	r22, r22
 454:	77 27       	eor	r23, r23
 456:	cb 01       	movw	r24, r22
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret

0000045c <__mulsf3>:
 45c:	0b d0       	rcall	.+22     	; 0x474 <__mulsf3x>
 45e:	c4 cf       	rjmp	.-120    	; 0x3e8 <__fp_round>
 460:	b5 df       	rcall	.-150    	; 0x3cc <__fp_pscA>
 462:	28 f0       	brcs	.+10     	; 0x46e <__stack+0xf>
 464:	ba df       	rcall	.-140    	; 0x3da <__fp_pscB>
 466:	18 f0       	brcs	.+6      	; 0x46e <__stack+0xf>
 468:	95 23       	and	r25, r21
 46a:	09 f0       	breq	.+2      	; 0x46e <__stack+0xf>
 46c:	a6 cf       	rjmp	.-180    	; 0x3ba <__fp_inf>
 46e:	ab cf       	rjmp	.-170    	; 0x3c6 <__fp_nan>
 470:	11 24       	eor	r1, r1
 472:	ee cf       	rjmp	.-36     	; 0x450 <__fp_szero>

00000474 <__mulsf3x>:
 474:	ca df       	rcall	.-108    	; 0x40a <__fp_split3>
 476:	a0 f3       	brcs	.-24     	; 0x460 <__stack+0x1>

00000478 <__mulsf3_pse>:
 478:	95 9f       	mul	r25, r21
 47a:	d1 f3       	breq	.-12     	; 0x470 <__stack+0x11>
 47c:	95 0f       	add	r25, r21
 47e:	50 e0       	ldi	r21, 0x00	; 0
 480:	55 1f       	adc	r21, r21
 482:	62 9f       	mul	r22, r18
 484:	f0 01       	movw	r30, r0
 486:	72 9f       	mul	r23, r18
 488:	bb 27       	eor	r27, r27
 48a:	f0 0d       	add	r31, r0
 48c:	b1 1d       	adc	r27, r1
 48e:	63 9f       	mul	r22, r19
 490:	aa 27       	eor	r26, r26
 492:	f0 0d       	add	r31, r0
 494:	b1 1d       	adc	r27, r1
 496:	aa 1f       	adc	r26, r26
 498:	64 9f       	mul	r22, r20
 49a:	66 27       	eor	r22, r22
 49c:	b0 0d       	add	r27, r0
 49e:	a1 1d       	adc	r26, r1
 4a0:	66 1f       	adc	r22, r22
 4a2:	82 9f       	mul	r24, r18
 4a4:	22 27       	eor	r18, r18
 4a6:	b0 0d       	add	r27, r0
 4a8:	a1 1d       	adc	r26, r1
 4aa:	62 1f       	adc	r22, r18
 4ac:	73 9f       	mul	r23, r19
 4ae:	b0 0d       	add	r27, r0
 4b0:	a1 1d       	adc	r26, r1
 4b2:	62 1f       	adc	r22, r18
 4b4:	83 9f       	mul	r24, r19
 4b6:	a0 0d       	add	r26, r0
 4b8:	61 1d       	adc	r22, r1
 4ba:	22 1f       	adc	r18, r18
 4bc:	74 9f       	mul	r23, r20
 4be:	33 27       	eor	r19, r19
 4c0:	a0 0d       	add	r26, r0
 4c2:	61 1d       	adc	r22, r1
 4c4:	23 1f       	adc	r18, r19
 4c6:	84 9f       	mul	r24, r20
 4c8:	60 0d       	add	r22, r0
 4ca:	21 1d       	adc	r18, r1
 4cc:	82 2f       	mov	r24, r18
 4ce:	76 2f       	mov	r23, r22
 4d0:	6a 2f       	mov	r22, r26
 4d2:	11 24       	eor	r1, r1
 4d4:	9f 57       	subi	r25, 0x7F	; 127
 4d6:	50 40       	sbci	r21, 0x00	; 0
 4d8:	8a f0       	brmi	.+34     	; 0x4fc <__mulsf3_pse+0x84>
 4da:	e1 f0       	breq	.+56     	; 0x514 <__mulsf3_pse+0x9c>
 4dc:	88 23       	and	r24, r24
 4de:	4a f0       	brmi	.+18     	; 0x4f2 <__mulsf3_pse+0x7a>
 4e0:	ee 0f       	add	r30, r30
 4e2:	ff 1f       	adc	r31, r31
 4e4:	bb 1f       	adc	r27, r27
 4e6:	66 1f       	adc	r22, r22
 4e8:	77 1f       	adc	r23, r23
 4ea:	88 1f       	adc	r24, r24
 4ec:	91 50       	subi	r25, 0x01	; 1
 4ee:	50 40       	sbci	r21, 0x00	; 0
 4f0:	a9 f7       	brne	.-22     	; 0x4dc <__mulsf3_pse+0x64>
 4f2:	9e 3f       	cpi	r25, 0xFE	; 254
 4f4:	51 05       	cpc	r21, r1
 4f6:	70 f0       	brcs	.+28     	; 0x514 <__mulsf3_pse+0x9c>
 4f8:	60 cf       	rjmp	.-320    	; 0x3ba <__fp_inf>
 4fa:	aa cf       	rjmp	.-172    	; 0x450 <__fp_szero>
 4fc:	5f 3f       	cpi	r21, 0xFF	; 255
 4fe:	ec f3       	brlt	.-6      	; 0x4fa <__mulsf3_pse+0x82>
 500:	98 3e       	cpi	r25, 0xE8	; 232
 502:	dc f3       	brlt	.-10     	; 0x4fa <__mulsf3_pse+0x82>
 504:	86 95       	lsr	r24
 506:	77 95       	ror	r23
 508:	67 95       	ror	r22
 50a:	b7 95       	ror	r27
 50c:	f7 95       	ror	r31
 50e:	e7 95       	ror	r30
 510:	9f 5f       	subi	r25, 0xFF	; 255
 512:	c1 f7       	brne	.-16     	; 0x504 <__mulsf3_pse+0x8c>
 514:	fe 2b       	or	r31, r30
 516:	88 0f       	add	r24, r24
 518:	91 1d       	adc	r25, r1
 51a:	96 95       	lsr	r25
 51c:	87 95       	ror	r24
 51e:	97 f9       	bld	r25, 7
 520:	08 95       	ret

00000522 <_exit>:
 522:	f8 94       	cli

00000524 <__stop_program>:
 524:	ff cf       	rjmp	.-2      	; 0x524 <__stop_program>
