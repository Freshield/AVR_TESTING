
TEST5_TIMER1_CAPTCH_HZ.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000826  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00000826  000008ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800082  00800082  000008dc  2**0
                  ALLOC
  3 .stab         00001890  00000000  00000000  000008dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000051f  00000000  00000000  0000216c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000100  00000000  00000000  00002690  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c46  00000000  00000000  00002790  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001e2  00000000  00000000  000033d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d0  00000000  00000000  000035b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  00003b88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000652  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000064f  00000000  00000000  000044a2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 38       	cpi	r26, 0x82	; 130
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e8       	ldi	r26, 0x82	; 130
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 38       	cpi	r26, 0x89	; 137
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 67 02 	call	0x4ce	; 0x4ce <main>
  8a:	0c 94 11 04 	jmp	0x822	; 0x822 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z12delay_reducel>:

#define uchar unsigned char


void delay_reduce(long int delay)
{
  92:	dc 01       	movw	r26, r24
  94:	cb 01       	movw	r24, r22
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  96:	00 97       	sbiw	r24, 0x00	; 0
  98:	a1 05       	cpc	r26, r1
  9a:	b1 05       	cpc	r27, r1
  9c:	41 f0       	breq	.+16     	; 0xae <_Z12delay_reducel+0x1c>
	{
		delay--;
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	a1 09       	sbc	r26, r1
  a2:	b1 09       	sbc	r27, r1
		asm volatile ("nop");
  a4:	00 00       	nop
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  a6:	00 97       	sbiw	r24, 0x00	; 0
  a8:	a1 05       	cpc	r26, r1
  aa:	b1 05       	cpc	r27, r1
  ac:	c1 f7       	brne	.-16     	; 0x9e <_Z12delay_reducel+0xc>
  ae:	08 95       	ret

000000b0 <_Z12delay_secondi>:

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	41 f4       	brne	.+16     	; 0xc4 <_Z12delay_secondi+0x14>
  b4:	08 95       	ret
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	30 40       	sbci	r19, 0x00	; 0
	{
		for(j=65535;j!=0;j--);
  ba:	e9 f7       	brne	.-6      	; 0xb6 <_Z12delay_secondi+0x6>
		{
			asm volatile ("nop");
  bc:	00 00       	nop

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	19 f4       	brne	.+6      	; 0xc8 <_Z12delay_secondi+0x18>
  c2:	08 95       	ret
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  c4:	4f ef       	ldi	r20, 0xFF	; 255
  c6:	5f ef       	ldi	r21, 0xFF	; 255
  c8:	9a 01       	movw	r18, r20
  ca:	f5 cf       	rjmp	.-22     	; 0xb6 <_Z12delay_secondi+0x6>

000000cc <_Z22TIMER0_NORMAL_PWM_INITv>:
void TIMER0_NORMAL_PWM_INIT()
{
	//端口初始化
	//PWM_TIMER0_DDR |= (1 << PWM_TIMER0_OUT); 
	//计数器初始化
	TCNT0=0x00;
  cc:	12 be       	out	0x32, r1	; 50
	//OCR0 = 0X01;//***避免与bottom相同时候特殊情况
	//中断初始化
	TIMSK |= 1 << TOIE0;
  ce:	89 b7       	in	r24, 0x39	; 57
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	89 bf       	out	0x39, r24	; 57
	//PWM模式设置
	TCCR0 |= (1 << CS00) | (1 << CS02);//设置为普通PWM；匹配时将取反；1024分频
  d4:	83 b7       	in	r24, 0x33	; 51
  d6:	85 60       	ori	r24, 0x05	; 5
  d8:	83 bf       	out	0x33, r24	; 51
	
	
}
  da:	08 95       	ret

000000dc <_Z27TIMER0_NORMAL_PWM_TCNT0_setf>:
//**************************************************************


void TIMER0_NORMAL_PWM_TCNT0_set(float compare_time)
{
	TCNT0 = 256 - F_CPU/1024 * compare_time;
  dc:	20 e0       	ldi	r18, 0x00	; 0
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	41 ee       	ldi	r20, 0xE1	; 225
  e2:	55 e4       	ldi	r21, 0x45	; 69
  e4:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__mulsf3>
  e8:	9b 01       	movw	r18, r22
  ea:	ac 01       	movw	r20, r24
  ec:	60 e0       	ldi	r22, 0x00	; 0
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	80 e8       	ldi	r24, 0x80	; 128
  f2:	93 e4       	ldi	r25, 0x43	; 67
  f4:	0e 94 77 02 	call	0x4ee	; 0x4ee <__subsf3>
  f8:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fixunssfsi>
  fc:	62 bf       	out	0x32, r22	; 50
	
}
  fe:	08 95       	ret

00000100 <_Z24TIMER0_NORMAL_PWM_SEARCHv>:
//*****************F_CPU/1024 * compare_time 不大于255******
//**************一般compare_time取0.01 在中断中累加或者用TIMER1
//**************************************************************
void TIMER0_NORMAL_PWM_SEARCH()
{
	while(!(TIFR & ~(1 << TOV0)));//***********等待置位
 100:	88 b7       	in	r24, 0x38	; 56
 102:	8e 7f       	andi	r24, 0xFE	; 254
 104:	e9 f3       	breq	.-6      	; 0x100 <_Z24TIMER0_NORMAL_PWM_SEARCHv>
	
	TIFR |= 1 << TOV0;//***************写1清零
 106:	88 b7       	in	r24, 0x38	; 56
 108:	81 60       	ori	r24, 0x01	; 1
 10a:	88 bf       	out	0x38, r24	; 56
	
	
	
}
 10c:	08 95       	ret

0000010e <_Z21TIMER0_CATCH_PWM_INITv>:
//**************************************************************

void TIMER0_CATCH_PWM_INIT()
{
	//端口初始化
	PWM_TIMER0_DDR &= ~(1 << PWM_TIMER0_T0); 
 10e:	b8 98       	cbi	0x17, 0	; 23
	PWM_TIMER0_PORT |= 1 << PWM_TIMER0_T0;
 110:	c0 9a       	sbi	0x18, 0	; 24
	//计数器初始化
	TCNT0 = 255;
 112:	8f ef       	ldi	r24, 0xFF	; 255
 114:	82 bf       	out	0x32, r24	; 50
	//OCR0 = 0X01;//***避免与bottom相同时候特殊情况
	//中断初始化
	TIMSK |= 1 << TICIE1;
 116:	89 b7       	in	r24, 0x39	; 57
 118:	80 62       	ori	r24, 0x20	; 32
 11a:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR0 |=  (1 << CS01) | (1 << CS02);//设置为捕获PWM；
 11c:	83 b7       	in	r24, 0x33	; 51
 11e:	86 60       	ori	r24, 0x06	; 6
 120:	83 bf       	out	0x33, r24	; 51
	
	
}
 122:	08 95       	ret

00000124 <_Z24TIMER0_FASTPWM_OCR0_initv>:

//**********************FAST PWM OCR0模式初始化*******************//
void TIMER0_FASTPWM_OCR0_init()
{
	//端口初始化
	PWM_TIMER0_DDR|=(1<<PWM_TIMER0_OUT); 
 124:	bb 9a       	sbi	0x17, 3	; 23
	//计数器初始化
	TCNT0=0x00;OCR0 = 0X01;//***避免与bottom相同时候特殊情况
 126:	12 be       	out	0x32, r1	; 50
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	8c bf       	out	0x3c, r24	; 60
	//中断初始化
	TIMSK |= (1<<OCIE0)|(1<<TOIE0);
 12c:	89 b7       	in	r24, 0x39	; 57
 12e:	83 60       	ori	r24, 0x03	; 3
 130:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR0 |= (1 << WGM00) | (1 << WGM01) | (1 << COM01) | (1 << COM00) | (1 << CS01);//设置为快速PWM；与OCR0匹配时将清零；8分频
 132:	83 b7       	in	r24, 0x33	; 51
 134:	8a 67       	ori	r24, 0x7A	; 122
 136:	83 bf       	out	0x33, r24	; 51
	
	
}
 138:	08 95       	ret

0000013a <_Z24TIMER0_FASTPWMA_OCR0_setf>:
//********************FAST PWM ICR0模式时间设定*********************//
void TIMER0_FASTPWMA_OCR0_set(float compare_time)
{
	OCR0=F_CPU/8*compare_time;
 13a:	20 e0       	ldi	r18, 0x00	; 0
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	41 e6       	ldi	r20, 0x61	; 97
 140:	59 e4       	ldi	r21, 0x49	; 73
 142:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__mulsf3>
 146:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fixunssfsi>
 14a:	6c bf       	out	0x3c, r22	; 60
	
}
 14c:	08 95       	ret

0000014e <_Z22TIMER1_NORMAL_PWM_INITv>:
void TIMER1_NORMAL_PWM_INIT()
{
	//端口初始化
	//PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
	//计数器初始化
	TCNT1 = 0x00;
 14e:	1d bc       	out	0x2d, r1	; 45
 150:	1c bc       	out	0x2c, r1	; 44
	//中断初始化
	TIMSK |= 1<<TOIE1;
 152:	89 b7       	in	r24, 0x39	; 57
 154:	84 60       	ori	r24, 0x04	; 4
 156:	89 bf       	out	0x39, r24	; 57
	//普通PWM模式设置
	//TCCR1A |= 1<<COM1A1;//比较匹配清零 TOP置位
	TCCR1B |= (1<<CS10)|(1<<CS12);//1024分频
 158:	8e b5       	in	r24, 0x2e	; 46
 15a:	85 60       	ori	r24, 0x05	; 5
 15c:	8e bd       	out	0x2e, r24	; 46
	//TCCR1B |= 1 << CS10;//**********1分频
	
}
 15e:	08 95       	ret

00000160 <_Z21TIMER1_NORMAL_PWM_setf>:
//********************TIMER1 NORMAL PWM 模式时间设定*********************//
void TIMER1_NORMAL_PWM_set(float compare_time)
{
	TCNT1 = 65536 - F_CPU/1024*compare_time;
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	41 ee       	ldi	r20, 0xE1	; 225
 166:	55 e4       	ldi	r21, 0x45	; 69
 168:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__mulsf3>
 16c:	9b 01       	movw	r18, r22
 16e:	ac 01       	movw	r20, r24
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	80 e8       	ldi	r24, 0x80	; 128
 176:	97 e4       	ldi	r25, 0x47	; 71
 178:	0e 94 77 02 	call	0x4ee	; 0x4ee <__subsf3>
 17c:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fixunssfsi>
 180:	dc 01       	movw	r26, r24
 182:	cb 01       	movw	r24, r22
 184:	9d bd       	out	0x2d, r25	; 45
 186:	8c bd       	out	0x2c, r24	; 44
	
}
 188:	08 95       	ret

0000018a <_Z25TIMER1_FASTPWMA_ICR1_initv>:

//**********************FAST PWM ICR1模式初始化*******************//
void TIMER1_FASTPWMA_ICR1_init()
{
	//端口初始化
	PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
 18a:	8d 9a       	sbi	0x11, 5	; 17
 18c:	95 98       	cbi	0x12, 5	; 18
	//计数器初始化
	TCNT1 = 0x00;
 18e:	1d bc       	out	0x2d, r1	; 45
 190:	1c bc       	out	0x2c, r1	; 44
	//中断初始化
	TIMSK |= (1<<OCIE1A)|(1<<TOIE1);
 192:	89 b7       	in	r24, 0x39	; 57
 194:	84 61       	ori	r24, 0x14	; 20
 196:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR1A |= (1<<COM1A1)|(1<<WGM11);//比较匹配清零 TOP置位 
 198:	8f b5       	in	r24, 0x2f	; 47
 19a:	82 68       	ori	r24, 0x82	; 130
 19c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS12);//TOP为ICR1的值 1024分频
 19e:	8e b5       	in	r24, 0x2e	; 46
 1a0:	8d 61       	ori	r24, 0x1D	; 29
 1a2:	8e bd       	out	0x2e, r24	; 46
	
	
}
 1a4:	08 95       	ret

000001a6 <_Z24TIMER1_FASTPWMA_ICR1_setff>:
//********************FAST PWM ICR1模式时间设定*********************//
void TIMER1_FASTPWMA_ICR1_set(float compare_time,float top_time)
{
 1a6:	cf 92       	push	r12
 1a8:	df 92       	push	r13
 1aa:	ef 92       	push	r14
 1ac:	ff 92       	push	r15
 1ae:	69 01       	movw	r12, r18
 1b0:	7a 01       	movw	r14, r20
	OCR1A=F_CPU/1024*compare_time;
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	41 ee       	ldi	r20, 0xE1	; 225
 1b8:	55 e4       	ldi	r21, 0x45	; 69
 1ba:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__mulsf3>
 1be:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fixunssfsi>
 1c2:	dc 01       	movw	r26, r24
 1c4:	cb 01       	movw	r24, r22
 1c6:	9b bd       	out	0x2b, r25	; 43
 1c8:	8a bd       	out	0x2a, r24	; 42
	ICR1=F_CPU/1024*top_time;
 1ca:	c7 01       	movw	r24, r14
 1cc:	b6 01       	movw	r22, r12
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	41 ee       	ldi	r20, 0xE1	; 225
 1d4:	55 e4       	ldi	r21, 0x45	; 69
 1d6:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__mulsf3>
 1da:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fixunssfsi>
 1de:	dc 01       	movw	r26, r24
 1e0:	cb 01       	movw	r24, r22
 1e2:	97 bd       	out	0x27, r25	; 39
 1e4:	86 bd       	out	0x26, r24	; 38
}
 1e6:	ff 90       	pop	r15
 1e8:	ef 90       	pop	r14
 1ea:	df 90       	pop	r13
 1ec:	cf 90       	pop	r12
 1ee:	08 95       	ret

000001f0 <_Z31TIMER1_PHASE_CORRECTION_10_initv>:

//**********************十位相位修正PWM模式初始化*******************//
void TIMER1_PHASE_CORRECTION_10_init()
{
	//端口初始化
	PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
 1f0:	8d 9a       	sbi	0x11, 5	; 17
 1f2:	95 98       	cbi	0x12, 5	; 18
	//计数器初始化
	TCNT1 = 0x00;OCR1A = 0X00;
 1f4:	1d bc       	out	0x2d, r1	; 45
 1f6:	1c bc       	out	0x2c, r1	; 44
 1f8:	1b bc       	out	0x2b, r1	; 43
 1fa:	1a bc       	out	0x2a, r1	; 42
	//中断初始化
	TIMSK |= (1<<OCIE1A)|(1<<TOIE1);
 1fc:	89 b7       	in	r24, 0x39	; 57
 1fe:	84 61       	ori	r24, 0x14	; 20
 200:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR1A |= (1<<COM1A1)|(1<<WGM11)|(1<<WGM10);//比较匹配清零 TOP置位
 202:	8f b5       	in	r24, 0x2f	; 47
 204:	83 68       	ori	r24, 0x83	; 131
 206:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<CS11);//TOP为ICR1的值 8分频
 208:	8e b5       	in	r24, 0x2e	; 46
 20a:	82 60       	ori	r24, 0x02	; 2
 20c:	8e bd       	out	0x2e, r24	; 46
	
	
}
 20e:	08 95       	ret

00000210 <_Z21TIMER1_CATCH_PWM_INITv>:
//**************************************************************

void TIMER1_CATCH_PWM_INIT()
{
	//端口初始化
	PWM_TIMER1_DDR &= ~(1 << PWM_TIMER1_CATCH); 
 210:	8e 98       	cbi	0x11, 6	; 17
	PWM_TIMER1_PORT |= 1 << PWM_TIMER1_CATCH;
 212:	96 9a       	sbi	0x12, 6	; 18
	//计数器初始化
	TCNT0 = 0X00;
 214:	12 be       	out	0x32, r1	; 50
	//OCR0 = 0X01;//***避免与bottom相同时候特殊情况
	//中断初始化
	TIMSK |= 1 << TICIE1;
 216:	89 b7       	in	r24, 0x39	; 57
 218:	80 62       	ori	r24, 0x20	; 32
 21a:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	//TCCR0 |=  (1 << CS01) | (1 << CS02);//设置为捕获PWM；
	TCCR1B |= (1 << ICNC1) | (1 << ICES1) | (1 << CS10);//********频率1分频
 21c:	8e b5       	in	r24, 0x2e	; 46
 21e:	81 6c       	ori	r24, 0xC1	; 193
 220:	8e bd       	out	0x2e, r24	; 46
	
}
 222:	08 95       	ret

00000224 <_Z22TIMER2_NORMAL_PWM_INITv>:
void TIMER2_NORMAL_PWM_INIT()
{
	//端口初始化
	//PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
	//计数器初始化
	TCNT2 = 0x00;
 224:	14 bc       	out	0x24, r1	; 36
	//中断初始化
	TIMSK |= 1<<TOIE2;
 226:	89 b7       	in	r24, 0x39	; 57
 228:	80 64       	ori	r24, 0x40	; 64
 22a:	89 bf       	out	0x39, r24	; 57
	//普通PWM模式设置
	//TCCR2 |= 1<<COM20;//比较匹配取反
	TCCR2 |= (1 << CS22) | (1 << CS21) | (1 << CS20);//1024分频
 22c:	85 b5       	in	r24, 0x25	; 37
 22e:	87 60       	ori	r24, 0x07	; 7
 230:	85 bd       	out	0x25, r24	; 37
	
	
}
 232:	08 95       	ret

00000234 <_Z21TIMER2_NORMAL_PWM_setf>:
//********************TIMER1 NORMAL PWM 模式时间设定*********************//
void TIMER2_NORMAL_PWM_set(float compare_time)
{
	TCNT2 = 256 - F_CPU/1024*compare_time;
 234:	20 e0       	ldi	r18, 0x00	; 0
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	41 ee       	ldi	r20, 0xE1	; 225
 23a:	55 e4       	ldi	r21, 0x45	; 69
 23c:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__mulsf3>
 240:	9b 01       	movw	r18, r22
 242:	ac 01       	movw	r20, r24
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	70 e0       	ldi	r23, 0x00	; 0
 248:	80 e8       	ldi	r24, 0x80	; 128
 24a:	93 e4       	ldi	r25, 0x43	; 67
 24c:	0e 94 77 02 	call	0x4ee	; 0x4ee <__subsf3>
 250:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fixunssfsi>
 254:	64 bd       	out	0x24, r22	; 36
	
}
 256:	08 95       	ret

00000258 <_Z10NIXIE_INITv>:

#define uchar unsigned char
//*********************数码管初始化
void NIXIE_INIT()
{
	NIXIE_DDR = 0xff;
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	8a bb       	out	0x1a, r24	; 26
	
	NIXIE_PORT = 0x00;
 25c:	1b ba       	out	0x1b, r1	; 27
	
}
 25e:	08 95       	ret

00000260 <_Z10NIXIE_SHOWh>:

//********************显示数码管 输入序号显示相应的数字 暂时没有加入英文 16为错值
//*************************要带DP加17

void NIXIE_SHOW(uchar count)
{
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	cd b7       	in	r28, 0x3d	; 61
 266:	de b7       	in	r29, 0x3e	; 62
 268:	a1 97       	sbiw	r28, 0x21	; 33
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
uchar nixie[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x00,
0x3f | 0x80,0x06 | 0x80,0x5b | 0x80,0x4f | 0x80,0x66 | 0x80,0x6d | 0x80,0x7d | 0x80,0x07 | 0x80,0x7f | 0x80,
0x6f | 0x80,0x77 | 0x80,0x7c | 0x80,0x39 | 0x80,0x5e | 0x80,0x79 | 0x80,0x71 | 0x80 };
 274:	de 01       	movw	r26, r28
 276:	11 96       	adiw	r26, 0x01	; 1
 278:	e0 e6       	ldi	r30, 0x60	; 96
 27a:	f0 e0       	ldi	r31, 0x00	; 0
 27c:	91 e2       	ldi	r25, 0x21	; 33
 27e:	01 90       	ld	r0, Z+
 280:	0d 92       	st	X+, r0
 282:	91 50       	subi	r25, 0x01	; 1
 284:	e1 f7       	brne	.-8      	; 0x27e <_Z10NIXIE_SHOWh+0x1e>
	
NIXIE_PORT=nixie[count];
 286:	fe 01       	movw	r30, r28
 288:	e8 0f       	add	r30, r24
 28a:	f1 1d       	adc	r31, r1
 28c:	81 81       	ldd	r24, Z+1	; 0x01
 28e:	8b bb       	out	0x1b, r24	; 27

}
 290:	a1 96       	adiw	r28, 0x21	; 33
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	f8 94       	cli
 296:	de bf       	out	0x3e, r29	; 62
 298:	0f be       	out	0x3f, r0	; 63
 29a:	cd bf       	out	0x3d, r28	; 61
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	08 95       	ret

000002a2 <_Z10NIXIE_FLOWv>:



//*******************循环显示0到9 延时没有严格计算
void NIXIE_FLOW()
{
 2a2:	cf 93       	push	r28
       for(uchar count=0;count<=15;count++)
 2a4:	c0 e0       	ldi	r28, 0x00	; 0
	   {
		  
		    
		NIXIE_SHOW(count);
 2a6:	8c 2f       	mov	r24, r28
 2a8:	0e 94 30 01 	call	0x260	; 0x260 <_Z10NIXIE_SHOWh>
		
		delay_second(7);
 2ac:	87 e0       	ldi	r24, 0x07	; 7
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>


//*******************循环显示0到9 延时没有严格计算
void NIXIE_FLOW()
{
       for(uchar count=0;count<=15;count++)
 2b4:	cf 5f       	subi	r28, 0xFF	; 255
 2b6:	c0 31       	cpi	r28, 0x10	; 16
 2b8:	b1 f7       	brne	.-20     	; 0x2a6 <_Z10NIXIE_FLOWv+0x4>
		NIXIE_SHOW(count);
		
		delay_second(7);
		   
	   }		   
    }
 2ba:	cf 91       	pop	r28
 2bc:	08 95       	ret

000002be <_Z15NIXIE_4BIT_INITv>:
	//*********************数码管4位初始化
void NIXIE_4BIT_INIT()
{
	NIXIE_DDR = 0xff;
 2be:	8f ef       	ldi	r24, 0xFF	; 255
 2c0:	8a bb       	out	0x1a, r24	; 26
	
	NIXIE_PORT = 0x00;
 2c2:	1b ba       	out	0x1b, r1	; 27
	
	//***********准备工作
	NIXIE_DDR = 0XFF;
 2c4:	8a bb       	out	0x1a, r24	; 26
	
	NIXIE_CON_DDR |= (1 << 0)|(1 << 1)|(1 << 2)|(1 << 3);
 2c6:	87 b3       	in	r24, 0x17	; 23
 2c8:	8f 60       	ori	r24, 0x0F	; 15
 2ca:	87 bb       	out	0x17, r24	; 23
}
 2cc:	08 95       	ret

000002ce <_Z17NIXIE_4BIT_0_SHOWh>:
{
	
	
	//******************第3位
	
	NIXIE_CON_PORT = NIXIE_CON_PORT | 0X0F;//*********	清低四位 
 2ce:	98 b3       	in	r25, 0x18	; 24
 2d0:	9f 60       	ori	r25, 0x0F	; 15
 2d2:	98 bb       	out	0x18, r25	; 24
	
	NIXIE_PORT = 0X00;
 2d4:	1b ba       	out	0x1b, r1	; 27
	
	
	NIXIE_CON_PORT = NIXIE_CON_PORT & 0XF7;//*********第3位
 2d6:	c3 98       	cbi	0x18, 3	; 24
	
	//NIXIE_CON_PORT = ~(1 << 3);
	
	NIXIE_SHOW(T);
 2d8:	0e 94 30 01 	call	0x260	; 0x260 <_Z10NIXIE_SHOWh>
	
	delay_reduce(100);
 2dc:	64 e6       	ldi	r22, 0x64	; 100
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	0e 94 49 00 	call	0x92	; 0x92 <_Z12delay_reducel>
	
}	
 2e8:	08 95       	ret

000002ea <_Z17NIXIE_4BIT_1_SHOWh>:
{
	
	
	//******************第2位
	
	NIXIE_CON_PORT = NIXIE_CON_PORT | 0X0F;//*********	清低四位 
 2ea:	98 b3       	in	r25, 0x18	; 24
 2ec:	9f 60       	ori	r25, 0x0F	; 15
 2ee:	98 bb       	out	0x18, r25	; 24
	
	NIXIE_PORT = 0X00;
 2f0:	1b ba       	out	0x1b, r1	; 27
	
	
	NIXIE_CON_PORT = NIXIE_CON_PORT & 0XFB;//*********第2位
 2f2:	c2 98       	cbi	0x18, 2	; 24
	
	//NIXIE_CON_PORT = ~(1 << 2);
	
	NIXIE_SHOW(T);
 2f4:	0e 94 30 01 	call	0x260	; 0x260 <_Z10NIXIE_SHOWh>
	
	
	delay_reduce(100);
 2f8:	64 e6       	ldi	r22, 0x64	; 100
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	0e 94 49 00 	call	0x92	; 0x92 <_Z12delay_reducel>
	
	
}	
 304:	08 95       	ret

00000306 <_Z17NIXIE_4BIT_2_SHOWh>:
{
	
	
	//******************第1位
	
	 NIXIE_CON_PORT = NIXIE_CON_PORT | 0X0F;//*********	清低四位
 306:	98 b3       	in	r25, 0x18	; 24
 308:	9f 60       	ori	r25, 0x0F	; 15
 30a:	98 bb       	out	0x18, r25	; 24
	
	NIXIE_PORT = 0X00;
 30c:	1b ba       	out	0x1b, r1	; 27
	
	
	NIXIE_CON_PORT = NIXIE_CON_PORT & 0XFD;//*********第1位
 30e:	c1 98       	cbi	0x18, 1	; 24
	
	//NIXIE_CON_PORT = ~(1 << 1);
	
	NIXIE_SHOW(T);
 310:	0e 94 30 01 	call	0x260	; 0x260 <_Z10NIXIE_SHOWh>

    
    delay_reduce(100);
 314:	64 e6       	ldi	r22, 0x64	; 100
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 49 00 	call	0x92	; 0x92 <_Z12delay_reducel>
    

}	
 320:	08 95       	ret

00000322 <_Z17NIXIE_4BIT_3_SHOWh>:
{
	
	
	//******************第0位
	
	NIXIE_CON_PORT = NIXIE_CON_PORT | 0X0F;//*********	清低四位 
 322:	98 b3       	in	r25, 0x18	; 24
 324:	9f 60       	ori	r25, 0x0F	; 15
 326:	98 bb       	out	0x18, r25	; 24
	
	NIXIE_PORT = 0X00;
 328:	1b ba       	out	0x1b, r1	; 27
	
	
	NIXIE_CON_PORT = NIXIE_CON_PORT & 0XFE;//*********第0位
 32a:	c0 98       	cbi	0x18, 0	; 24
	
	//NIXIE_CON_PORT = ~(1 << 0);
	
	NIXIE_SHOW(T);
 32c:	0e 94 30 01 	call	0x260	; 0x260 <_Z10NIXIE_SHOWh>
	
	
	delay_reduce(100);
 330:	64 e6       	ldi	r22, 0x64	; 100
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	0e 94 49 00 	call	0x92	; 0x92 <_Z12delay_reducel>
	
	
}	
 33c:	08 95       	ret

0000033e <_Z15NIXIE_4BIT_SHOWhhhh>:

void NIXIE_4BIT_SHOW(uchar D ,uchar C ,uchar B ,uchar A)
{
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	c8 2f       	mov	r28, r24
 346:	d6 2f       	mov	r29, r22
 348:	14 2f       	mov	r17, r20
 34a:	82 2f       	mov	r24, r18
	NIXIE_4BIT_0_SHOW(A);
 34c:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z17NIXIE_4BIT_0_SHOWh>
	
	NIXIE_4BIT_1_SHOW(B);
 350:	81 2f       	mov	r24, r17
 352:	0e 94 75 01 	call	0x2ea	; 0x2ea <_Z17NIXIE_4BIT_1_SHOWh>
	
	NIXIE_4BIT_2_SHOW(C);
 356:	8d 2f       	mov	r24, r29
 358:	0e 94 83 01 	call	0x306	; 0x306 <_Z17NIXIE_4BIT_2_SHOWh>
	
	NIXIE_4BIT_3_SHOW(D);
 35c:	8c 2f       	mov	r24, r28
 35e:	0e 94 91 01 	call	0x322	; 0x322 <_Z17NIXIE_4BIT_3_SHOWh>
	
	
}
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	1f 91       	pop	r17
 368:	08 95       	ret

0000036a <_Z18NIXIE_4BIT_SHOW_L1hhhh>:
//********************四位数码管显示
//******************用改变最后一个显示的顺序来平衡亮度
void NIXIE_4BIT_SHOW_L1(uchar D ,uchar C ,uchar B ,uchar A)
{
 36a:	1f 93       	push	r17
 36c:	cf 93       	push	r28
 36e:	df 93       	push	r29
 370:	c8 2f       	mov	r28, r24
 372:	d6 2f       	mov	r29, r22
 374:	14 2f       	mov	r17, r20
 376:	82 2f       	mov	r24, r18
	NIXIE_4BIT_0_SHOW(A);
 378:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z17NIXIE_4BIT_0_SHOWh>
	
	NIXIE_4BIT_1_SHOW(B);
 37c:	81 2f       	mov	r24, r17
 37e:	0e 94 75 01 	call	0x2ea	; 0x2ea <_Z17NIXIE_4BIT_1_SHOWh>
	
	NIXIE_4BIT_2_SHOW(C);
 382:	8d 2f       	mov	r24, r29
 384:	0e 94 83 01 	call	0x306	; 0x306 <_Z17NIXIE_4BIT_2_SHOWh>
	
	NIXIE_4BIT_3_SHOW(D);
 388:	8c 2f       	mov	r24, r28
 38a:	0e 94 91 01 	call	0x322	; 0x322 <_Z17NIXIE_4BIT_3_SHOWh>
	
	
}
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	1f 91       	pop	r17
 394:	08 95       	ret

00000396 <_Z18NIXIE_4BIT_SHOW_L2hhhh>:

void NIXIE_4BIT_SHOW_L2(uchar D ,uchar C ,uchar B ,uchar A)
{
 396:	1f 93       	push	r17
 398:	cf 93       	push	r28
 39a:	df 93       	push	r29
 39c:	d8 2f       	mov	r29, r24
 39e:	c6 2f       	mov	r28, r22
 3a0:	14 2f       	mov	r17, r20
 3a2:	82 2f       	mov	r24, r18
	NIXIE_4BIT_0_SHOW(A);
 3a4:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z17NIXIE_4BIT_0_SHOWh>
	
	NIXIE_4BIT_1_SHOW(B);
 3a8:	81 2f       	mov	r24, r17
 3aa:	0e 94 75 01 	call	0x2ea	; 0x2ea <_Z17NIXIE_4BIT_1_SHOWh>
	
	NIXIE_4BIT_3_SHOW(D);
 3ae:	8d 2f       	mov	r24, r29
 3b0:	0e 94 91 01 	call	0x322	; 0x322 <_Z17NIXIE_4BIT_3_SHOWh>
	
	NIXIE_4BIT_2_SHOW(C);
 3b4:	8c 2f       	mov	r24, r28
 3b6:	0e 94 83 01 	call	0x306	; 0x306 <_Z17NIXIE_4BIT_2_SHOWh>
	
	
}
 3ba:	df 91       	pop	r29
 3bc:	cf 91       	pop	r28
 3be:	1f 91       	pop	r17
 3c0:	08 95       	ret

000003c2 <_Z18NIXIE_4BIT_SHOW_L3hhhh>:

void NIXIE_4BIT_SHOW_L3(uchar D ,uchar C ,uchar B ,uchar A)
{
 3c2:	1f 93       	push	r17
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	d8 2f       	mov	r29, r24
 3ca:	16 2f       	mov	r17, r22
 3cc:	c4 2f       	mov	r28, r20
 3ce:	82 2f       	mov	r24, r18
	NIXIE_4BIT_0_SHOW(A);
 3d0:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z17NIXIE_4BIT_0_SHOWh>
	
	NIXIE_4BIT_2_SHOW(C);
 3d4:	81 2f       	mov	r24, r17
 3d6:	0e 94 83 01 	call	0x306	; 0x306 <_Z17NIXIE_4BIT_2_SHOWh>
	
	NIXIE_4BIT_3_SHOW(D);
 3da:	8d 2f       	mov	r24, r29
 3dc:	0e 94 91 01 	call	0x322	; 0x322 <_Z17NIXIE_4BIT_3_SHOWh>
	
	NIXIE_4BIT_1_SHOW(B);
 3e0:	8c 2f       	mov	r24, r28
 3e2:	0e 94 75 01 	call	0x2ea	; 0x2ea <_Z17NIXIE_4BIT_1_SHOWh>
	
	
}
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	1f 91       	pop	r17
 3ec:	08 95       	ret

000003ee <_Z18NIXIE_4BIT_SHOW_L4hhhh>:

void NIXIE_4BIT_SHOW_L4(uchar D ,uchar C ,uchar B ,uchar A)
{
 3ee:	1f 93       	push	r17
 3f0:	cf 93       	push	r28
 3f2:	df 93       	push	r29
 3f4:	d8 2f       	mov	r29, r24
 3f6:	16 2f       	mov	r17, r22
 3f8:	84 2f       	mov	r24, r20
 3fa:	c2 2f       	mov	r28, r18
	
	NIXIE_4BIT_1_SHOW(B);
 3fc:	0e 94 75 01 	call	0x2ea	; 0x2ea <_Z17NIXIE_4BIT_1_SHOWh>
	
	NIXIE_4BIT_2_SHOW(C);
 400:	81 2f       	mov	r24, r17
 402:	0e 94 83 01 	call	0x306	; 0x306 <_Z17NIXIE_4BIT_2_SHOWh>
	
	NIXIE_4BIT_3_SHOW(D);
 406:	8d 2f       	mov	r24, r29
 408:	0e 94 91 01 	call	0x322	; 0x322 <_Z17NIXIE_4BIT_3_SHOWh>
	
	NIXIE_4BIT_0_SHOW(A);
 40c:	8c 2f       	mov	r24, r28
 40e:	0e 94 67 01 	call	0x2ce	; 0x2ce <_Z17NIXIE_4BIT_0_SHOWh>
	
}
 412:	df 91       	pop	r29
 414:	cf 91       	pop	r28
 416:	1f 91       	pop	r17
 418:	08 95       	ret

0000041a <__vector_5>:
uchar THOUSAND,HUNDRED,TEN,BIT = 0;

uchar CAPA,CAPB = 0;

ISR(TIMER1_CAPT_vect)
{
 41a:	1f 92       	push	r1
 41c:	0f 92       	push	r0
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	0f 92       	push	r0
 422:	11 24       	eor	r1, r1
 424:	2f 93       	push	r18
 426:	3f 93       	push	r19
 428:	4f 93       	push	r20
 42a:	5f 93       	push	r21
 42c:	6f 93       	push	r22
 42e:	7f 93       	push	r23
 430:	8f 93       	push	r24
 432:	9f 93       	push	r25
 434:	af 93       	push	r26
 436:	bf 93       	push	r27
 438:	ef 93       	push	r30
 43a:	ff 93       	push	r31
	if (CAPA == 0)
 43c:	80 91 83 00 	lds	r24, 0x0083
 440:	88 23       	and	r24, r24
 442:	29 f4       	brne	.+10     	; 0x44e <__vector_5+0x34>
	{
		
		CAPA = ICR1;
 444:	86 b5       	in	r24, 0x26	; 38
 446:	97 b5       	in	r25, 0x27	; 39
 448:	80 93 83 00 	sts	0x0083, r24
 44c:	2f c0       	rjmp	.+94     	; 0x4ac <__stack+0x4d>
		
	}
	else
	{
		CAPB = ICR1 - CAPA;
 44e:	26 b5       	in	r18, 0x26	; 38
 450:	37 b5       	in	r19, 0x27	; 39
 452:	28 1b       	sub	r18, r24
 454:	20 93 82 00 	sts	0x0082, r18
		
		TIME_COUNT = F_CPU / CAPB;
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	40 e0       	ldi	r20, 0x00	; 0
 45c:	50 e0       	ldi	r21, 0x00	; 0
 45e:	60 e0       	ldi	r22, 0x00	; 0
 460:	70 e8       	ldi	r23, 0x80	; 128
 462:	80 e7       	ldi	r24, 0x70	; 112
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__udivmodsi4>
 46a:	20 93 88 00 	sts	0x0088, r18
		
		TIMSK = 0X00;
 46e:	19 be       	out	0x39, r1	; 57
		
		THOUSAND = TIME_COUNT / 1000;
 470:	82 2f       	mov	r24, r18
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	68 ee       	ldi	r22, 0xE8	; 232
 476:	73 e0       	ldi	r23, 0x03	; 3
 478:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodhi4>
 47c:	60 93 87 00 	sts	0x0087, r22
		
		HUNDRED = TIME_COUNT % 1000 / 100;
 480:	64 e6       	ldi	r22, 0x64	; 100
 482:	70 e0       	ldi	r23, 0x00	; 0
 484:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodhi4>
 488:	60 93 86 00 	sts	0x0086, r22
		
		TEN = TIME_COUNT % 100 / 10;
 48c:	82 2f       	mov	r24, r18
 48e:	64 e6       	ldi	r22, 0x64	; 100
 490:	0e 94 bc 03 	call	0x778	; 0x778 <__udivmodqi4>
 494:	89 2f       	mov	r24, r25
 496:	3a e0       	ldi	r19, 0x0A	; 10
 498:	63 2f       	mov	r22, r19
 49a:	0e 94 bc 03 	call	0x778	; 0x778 <__udivmodqi4>
 49e:	80 93 85 00 	sts	0x0085, r24
		
		BIT = TIME_COUNT % 10;
 4a2:	82 2f       	mov	r24, r18
 4a4:	0e 94 bc 03 	call	0x778	; 0x778 <__udivmodqi4>
 4a8:	90 93 84 00 	sts	0x0084, r25
		
		
	}
	
	
}
 4ac:	ff 91       	pop	r31
 4ae:	ef 91       	pop	r30
 4b0:	bf 91       	pop	r27
 4b2:	af 91       	pop	r26
 4b4:	9f 91       	pop	r25
 4b6:	8f 91       	pop	r24
 4b8:	7f 91       	pop	r23
 4ba:	6f 91       	pop	r22
 4bc:	5f 91       	pop	r21
 4be:	4f 91       	pop	r20
 4c0:	3f 91       	pop	r19
 4c2:	2f 91       	pop	r18
 4c4:	0f 90       	pop	r0
 4c6:	0f be       	out	0x3f, r0	; 63
 4c8:	0f 90       	pop	r0
 4ca:	1f 90       	pop	r1
 4cc:	18 95       	reti

000004ce <main>:



int main(void)
{
	NIXIE_4BIT_INIT();
 4ce:	0e 94 5f 01 	call	0x2be	; 0x2be <_Z15NIXIE_4BIT_INITv>
	
	TIMER1_CATCH_PWM_INIT();
 4d2:	0e 94 08 01 	call	0x210	; 0x210 <_Z21TIMER1_CATCH_PWM_INITv>
	
	sei();
 4d6:	78 94       	sei
	
	
    while(1)
    {
        NIXIE_4BIT_SHOW(THOUSAND,HUNDRED,TEN,BIT);
 4d8:	80 91 87 00 	lds	r24, 0x0087
 4dc:	60 91 86 00 	lds	r22, 0x0086
 4e0:	40 91 85 00 	lds	r20, 0x0085
 4e4:	20 91 84 00 	lds	r18, 0x0084
 4e8:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z15NIXIE_4BIT_SHOWhhhh>
 4ec:	f5 cf       	rjmp	.-22     	; 0x4d8 <main+0xa>

000004ee <__subsf3>:
 4ee:	50 58       	subi	r21, 0x80	; 128

000004f0 <__addsf3>:
 4f0:	bb 27       	eor	r27, r27
 4f2:	aa 27       	eor	r26, r26
 4f4:	0e d0       	rcall	.+28     	; 0x512 <__addsf3x>
 4f6:	a3 c0       	rjmp	.+326    	; 0x63e <__fp_round>
 4f8:	94 d0       	rcall	.+296    	; 0x622 <__fp_pscA>
 4fa:	30 f0       	brcs	.+12     	; 0x508 <__addsf3+0x18>
 4fc:	99 d0       	rcall	.+306    	; 0x630 <__fp_pscB>
 4fe:	20 f0       	brcs	.+8      	; 0x508 <__addsf3+0x18>
 500:	31 f4       	brne	.+12     	; 0x50e <__addsf3+0x1e>
 502:	9f 3f       	cpi	r25, 0xFF	; 255
 504:	11 f4       	brne	.+4      	; 0x50a <__addsf3+0x1a>
 506:	1e f4       	brtc	.+6      	; 0x50e <__addsf3+0x1e>
 508:	89 c0       	rjmp	.+274    	; 0x61c <__fp_nan>
 50a:	0e f4       	brtc	.+2      	; 0x50e <__addsf3+0x1e>
 50c:	e0 95       	com	r30
 50e:	e7 fb       	bst	r30, 7
 510:	7f c0       	rjmp	.+254    	; 0x610 <__fp_inf>

00000512 <__addsf3x>:
 512:	e9 2f       	mov	r30, r25
 514:	a5 d0       	rcall	.+330    	; 0x660 <__fp_split3>
 516:	80 f3       	brcs	.-32     	; 0x4f8 <__addsf3+0x8>
 518:	ba 17       	cp	r27, r26
 51a:	62 07       	cpc	r22, r18
 51c:	73 07       	cpc	r23, r19
 51e:	84 07       	cpc	r24, r20
 520:	95 07       	cpc	r25, r21
 522:	18 f0       	brcs	.+6      	; 0x52a <__addsf3x+0x18>
 524:	71 f4       	brne	.+28     	; 0x542 <__addsf3x+0x30>
 526:	9e f5       	brtc	.+102    	; 0x58e <__addsf3x+0x7c>
 528:	bd c0       	rjmp	.+378    	; 0x6a4 <__fp_zero>
 52a:	0e f4       	brtc	.+2      	; 0x52e <__addsf3x+0x1c>
 52c:	e0 95       	com	r30
 52e:	0b 2e       	mov	r0, r27
 530:	ba 2f       	mov	r27, r26
 532:	a0 2d       	mov	r26, r0
 534:	0b 01       	movw	r0, r22
 536:	b9 01       	movw	r22, r18
 538:	90 01       	movw	r18, r0
 53a:	0c 01       	movw	r0, r24
 53c:	ca 01       	movw	r24, r20
 53e:	a0 01       	movw	r20, r0
 540:	11 24       	eor	r1, r1
 542:	ff 27       	eor	r31, r31
 544:	59 1b       	sub	r21, r25
 546:	99 f0       	breq	.+38     	; 0x56e <__addsf3x+0x5c>
 548:	59 3f       	cpi	r21, 0xF9	; 249
 54a:	50 f4       	brcc	.+20     	; 0x560 <__addsf3x+0x4e>
 54c:	50 3e       	cpi	r21, 0xE0	; 224
 54e:	68 f1       	brcs	.+90     	; 0x5aa <__addsf3x+0x98>
 550:	1a 16       	cp	r1, r26
 552:	f0 40       	sbci	r31, 0x00	; 0
 554:	a2 2f       	mov	r26, r18
 556:	23 2f       	mov	r18, r19
 558:	34 2f       	mov	r19, r20
 55a:	44 27       	eor	r20, r20
 55c:	58 5f       	subi	r21, 0xF8	; 248
 55e:	f3 cf       	rjmp	.-26     	; 0x546 <__addsf3x+0x34>
 560:	46 95       	lsr	r20
 562:	37 95       	ror	r19
 564:	27 95       	ror	r18
 566:	a7 95       	ror	r26
 568:	f0 40       	sbci	r31, 0x00	; 0
 56a:	53 95       	inc	r21
 56c:	c9 f7       	brne	.-14     	; 0x560 <__addsf3x+0x4e>
 56e:	7e f4       	brtc	.+30     	; 0x58e <__addsf3x+0x7c>
 570:	1f 16       	cp	r1, r31
 572:	ba 0b       	sbc	r27, r26
 574:	62 0b       	sbc	r22, r18
 576:	73 0b       	sbc	r23, r19
 578:	84 0b       	sbc	r24, r20
 57a:	ba f0       	brmi	.+46     	; 0x5aa <__addsf3x+0x98>
 57c:	91 50       	subi	r25, 0x01	; 1
 57e:	a1 f0       	breq	.+40     	; 0x5a8 <__addsf3x+0x96>
 580:	ff 0f       	add	r31, r31
 582:	bb 1f       	adc	r27, r27
 584:	66 1f       	adc	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	c2 f7       	brpl	.-16     	; 0x57c <__addsf3x+0x6a>
 58c:	0e c0       	rjmp	.+28     	; 0x5aa <__addsf3x+0x98>
 58e:	ba 0f       	add	r27, r26
 590:	62 1f       	adc	r22, r18
 592:	73 1f       	adc	r23, r19
 594:	84 1f       	adc	r24, r20
 596:	48 f4       	brcc	.+18     	; 0x5aa <__addsf3x+0x98>
 598:	87 95       	ror	r24
 59a:	77 95       	ror	r23
 59c:	67 95       	ror	r22
 59e:	b7 95       	ror	r27
 5a0:	f7 95       	ror	r31
 5a2:	9e 3f       	cpi	r25, 0xFE	; 254
 5a4:	08 f0       	brcs	.+2      	; 0x5a8 <__addsf3x+0x96>
 5a6:	b3 cf       	rjmp	.-154    	; 0x50e <__addsf3+0x1e>
 5a8:	93 95       	inc	r25
 5aa:	88 0f       	add	r24, r24
 5ac:	08 f0       	brcs	.+2      	; 0x5b0 <__addsf3x+0x9e>
 5ae:	99 27       	eor	r25, r25
 5b0:	ee 0f       	add	r30, r30
 5b2:	97 95       	ror	r25
 5b4:	87 95       	ror	r24
 5b6:	08 95       	ret

000005b8 <__fixunssfsi>:
 5b8:	5b d0       	rcall	.+182    	; 0x670 <__fp_splitA>
 5ba:	88 f0       	brcs	.+34     	; 0x5de <__fixunssfsi+0x26>
 5bc:	9f 57       	subi	r25, 0x7F	; 127
 5be:	90 f0       	brcs	.+36     	; 0x5e4 <__fixunssfsi+0x2c>
 5c0:	b9 2f       	mov	r27, r25
 5c2:	99 27       	eor	r25, r25
 5c4:	b7 51       	subi	r27, 0x17	; 23
 5c6:	a0 f0       	brcs	.+40     	; 0x5f0 <__fixunssfsi+0x38>
 5c8:	d1 f0       	breq	.+52     	; 0x5fe <__fixunssfsi+0x46>
 5ca:	66 0f       	add	r22, r22
 5cc:	77 1f       	adc	r23, r23
 5ce:	88 1f       	adc	r24, r24
 5d0:	99 1f       	adc	r25, r25
 5d2:	1a f0       	brmi	.+6      	; 0x5da <__fixunssfsi+0x22>
 5d4:	ba 95       	dec	r27
 5d6:	c9 f7       	brne	.-14     	; 0x5ca <__fixunssfsi+0x12>
 5d8:	12 c0       	rjmp	.+36     	; 0x5fe <__fixunssfsi+0x46>
 5da:	b1 30       	cpi	r27, 0x01	; 1
 5dc:	81 f0       	breq	.+32     	; 0x5fe <__fixunssfsi+0x46>
 5de:	62 d0       	rcall	.+196    	; 0x6a4 <__fp_zero>
 5e0:	b1 e0       	ldi	r27, 0x01	; 1
 5e2:	08 95       	ret
 5e4:	5f c0       	rjmp	.+190    	; 0x6a4 <__fp_zero>
 5e6:	67 2f       	mov	r22, r23
 5e8:	78 2f       	mov	r23, r24
 5ea:	88 27       	eor	r24, r24
 5ec:	b8 5f       	subi	r27, 0xF8	; 248
 5ee:	39 f0       	breq	.+14     	; 0x5fe <__fixunssfsi+0x46>
 5f0:	b9 3f       	cpi	r27, 0xF9	; 249
 5f2:	cc f3       	brlt	.-14     	; 0x5e6 <__fixunssfsi+0x2e>
 5f4:	86 95       	lsr	r24
 5f6:	77 95       	ror	r23
 5f8:	67 95       	ror	r22
 5fa:	b3 95       	inc	r27
 5fc:	d9 f7       	brne	.-10     	; 0x5f4 <__fixunssfsi+0x3c>
 5fe:	3e f4       	brtc	.+14     	; 0x60e <__fixunssfsi+0x56>
 600:	90 95       	com	r25
 602:	80 95       	com	r24
 604:	70 95       	com	r23
 606:	61 95       	neg	r22
 608:	7f 4f       	sbci	r23, 0xFF	; 255
 60a:	8f 4f       	sbci	r24, 0xFF	; 255
 60c:	9f 4f       	sbci	r25, 0xFF	; 255
 60e:	08 95       	ret

00000610 <__fp_inf>:
 610:	97 f9       	bld	r25, 7
 612:	9f 67       	ori	r25, 0x7F	; 127
 614:	80 e8       	ldi	r24, 0x80	; 128
 616:	70 e0       	ldi	r23, 0x00	; 0
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	08 95       	ret

0000061c <__fp_nan>:
 61c:	9f ef       	ldi	r25, 0xFF	; 255
 61e:	80 ec       	ldi	r24, 0xC0	; 192
 620:	08 95       	ret

00000622 <__fp_pscA>:
 622:	00 24       	eor	r0, r0
 624:	0a 94       	dec	r0
 626:	16 16       	cp	r1, r22
 628:	17 06       	cpc	r1, r23
 62a:	18 06       	cpc	r1, r24
 62c:	09 06       	cpc	r0, r25
 62e:	08 95       	ret

00000630 <__fp_pscB>:
 630:	00 24       	eor	r0, r0
 632:	0a 94       	dec	r0
 634:	12 16       	cp	r1, r18
 636:	13 06       	cpc	r1, r19
 638:	14 06       	cpc	r1, r20
 63a:	05 06       	cpc	r0, r21
 63c:	08 95       	ret

0000063e <__fp_round>:
 63e:	09 2e       	mov	r0, r25
 640:	03 94       	inc	r0
 642:	00 0c       	add	r0, r0
 644:	11 f4       	brne	.+4      	; 0x64a <__fp_round+0xc>
 646:	88 23       	and	r24, r24
 648:	52 f0       	brmi	.+20     	; 0x65e <__fp_round+0x20>
 64a:	bb 0f       	add	r27, r27
 64c:	40 f4       	brcc	.+16     	; 0x65e <__fp_round+0x20>
 64e:	bf 2b       	or	r27, r31
 650:	11 f4       	brne	.+4      	; 0x656 <__fp_round+0x18>
 652:	60 ff       	sbrs	r22, 0
 654:	04 c0       	rjmp	.+8      	; 0x65e <__fp_round+0x20>
 656:	6f 5f       	subi	r22, 0xFF	; 255
 658:	7f 4f       	sbci	r23, 0xFF	; 255
 65a:	8f 4f       	sbci	r24, 0xFF	; 255
 65c:	9f 4f       	sbci	r25, 0xFF	; 255
 65e:	08 95       	ret

00000660 <__fp_split3>:
 660:	57 fd       	sbrc	r21, 7
 662:	90 58       	subi	r25, 0x80	; 128
 664:	44 0f       	add	r20, r20
 666:	55 1f       	adc	r21, r21
 668:	59 f0       	breq	.+22     	; 0x680 <__fp_splitA+0x10>
 66a:	5f 3f       	cpi	r21, 0xFF	; 255
 66c:	71 f0       	breq	.+28     	; 0x68a <__fp_splitA+0x1a>
 66e:	47 95       	ror	r20

00000670 <__fp_splitA>:
 670:	88 0f       	add	r24, r24
 672:	97 fb       	bst	r25, 7
 674:	99 1f       	adc	r25, r25
 676:	61 f0       	breq	.+24     	; 0x690 <__fp_splitA+0x20>
 678:	9f 3f       	cpi	r25, 0xFF	; 255
 67a:	79 f0       	breq	.+30     	; 0x69a <__fp_splitA+0x2a>
 67c:	87 95       	ror	r24
 67e:	08 95       	ret
 680:	12 16       	cp	r1, r18
 682:	13 06       	cpc	r1, r19
 684:	14 06       	cpc	r1, r20
 686:	55 1f       	adc	r21, r21
 688:	f2 cf       	rjmp	.-28     	; 0x66e <__fp_split3+0xe>
 68a:	46 95       	lsr	r20
 68c:	f1 df       	rcall	.-30     	; 0x670 <__fp_splitA>
 68e:	08 c0       	rjmp	.+16     	; 0x6a0 <__fp_splitA+0x30>
 690:	16 16       	cp	r1, r22
 692:	17 06       	cpc	r1, r23
 694:	18 06       	cpc	r1, r24
 696:	99 1f       	adc	r25, r25
 698:	f1 cf       	rjmp	.-30     	; 0x67c <__fp_splitA+0xc>
 69a:	86 95       	lsr	r24
 69c:	71 05       	cpc	r23, r1
 69e:	61 05       	cpc	r22, r1
 6a0:	08 94       	sec
 6a2:	08 95       	ret

000006a4 <__fp_zero>:
 6a4:	e8 94       	clt

000006a6 <__fp_szero>:
 6a6:	bb 27       	eor	r27, r27
 6a8:	66 27       	eor	r22, r22
 6aa:	77 27       	eor	r23, r23
 6ac:	cb 01       	movw	r24, r22
 6ae:	97 f9       	bld	r25, 7
 6b0:	08 95       	ret

000006b2 <__mulsf3>:
 6b2:	0b d0       	rcall	.+22     	; 0x6ca <__mulsf3x>
 6b4:	c4 cf       	rjmp	.-120    	; 0x63e <__fp_round>
 6b6:	b5 df       	rcall	.-150    	; 0x622 <__fp_pscA>
 6b8:	28 f0       	brcs	.+10     	; 0x6c4 <__mulsf3+0x12>
 6ba:	ba df       	rcall	.-140    	; 0x630 <__fp_pscB>
 6bc:	18 f0       	brcs	.+6      	; 0x6c4 <__mulsf3+0x12>
 6be:	95 23       	and	r25, r21
 6c0:	09 f0       	breq	.+2      	; 0x6c4 <__mulsf3+0x12>
 6c2:	a6 cf       	rjmp	.-180    	; 0x610 <__fp_inf>
 6c4:	ab cf       	rjmp	.-170    	; 0x61c <__fp_nan>
 6c6:	11 24       	eor	r1, r1
 6c8:	ee cf       	rjmp	.-36     	; 0x6a6 <__fp_szero>

000006ca <__mulsf3x>:
 6ca:	ca df       	rcall	.-108    	; 0x660 <__fp_split3>
 6cc:	a0 f3       	brcs	.-24     	; 0x6b6 <__mulsf3+0x4>

000006ce <__mulsf3_pse>:
 6ce:	95 9f       	mul	r25, r21
 6d0:	d1 f3       	breq	.-12     	; 0x6c6 <__mulsf3+0x14>
 6d2:	95 0f       	add	r25, r21
 6d4:	50 e0       	ldi	r21, 0x00	; 0
 6d6:	55 1f       	adc	r21, r21
 6d8:	62 9f       	mul	r22, r18
 6da:	f0 01       	movw	r30, r0
 6dc:	72 9f       	mul	r23, r18
 6de:	bb 27       	eor	r27, r27
 6e0:	f0 0d       	add	r31, r0
 6e2:	b1 1d       	adc	r27, r1
 6e4:	63 9f       	mul	r22, r19
 6e6:	aa 27       	eor	r26, r26
 6e8:	f0 0d       	add	r31, r0
 6ea:	b1 1d       	adc	r27, r1
 6ec:	aa 1f       	adc	r26, r26
 6ee:	64 9f       	mul	r22, r20
 6f0:	66 27       	eor	r22, r22
 6f2:	b0 0d       	add	r27, r0
 6f4:	a1 1d       	adc	r26, r1
 6f6:	66 1f       	adc	r22, r22
 6f8:	82 9f       	mul	r24, r18
 6fa:	22 27       	eor	r18, r18
 6fc:	b0 0d       	add	r27, r0
 6fe:	a1 1d       	adc	r26, r1
 700:	62 1f       	adc	r22, r18
 702:	73 9f       	mul	r23, r19
 704:	b0 0d       	add	r27, r0
 706:	a1 1d       	adc	r26, r1
 708:	62 1f       	adc	r22, r18
 70a:	83 9f       	mul	r24, r19
 70c:	a0 0d       	add	r26, r0
 70e:	61 1d       	adc	r22, r1
 710:	22 1f       	adc	r18, r18
 712:	74 9f       	mul	r23, r20
 714:	33 27       	eor	r19, r19
 716:	a0 0d       	add	r26, r0
 718:	61 1d       	adc	r22, r1
 71a:	23 1f       	adc	r18, r19
 71c:	84 9f       	mul	r24, r20
 71e:	60 0d       	add	r22, r0
 720:	21 1d       	adc	r18, r1
 722:	82 2f       	mov	r24, r18
 724:	76 2f       	mov	r23, r22
 726:	6a 2f       	mov	r22, r26
 728:	11 24       	eor	r1, r1
 72a:	9f 57       	subi	r25, 0x7F	; 127
 72c:	50 40       	sbci	r21, 0x00	; 0
 72e:	8a f0       	brmi	.+34     	; 0x752 <__mulsf3_pse+0x84>
 730:	e1 f0       	breq	.+56     	; 0x76a <__mulsf3_pse+0x9c>
 732:	88 23       	and	r24, r24
 734:	4a f0       	brmi	.+18     	; 0x748 <__mulsf3_pse+0x7a>
 736:	ee 0f       	add	r30, r30
 738:	ff 1f       	adc	r31, r31
 73a:	bb 1f       	adc	r27, r27
 73c:	66 1f       	adc	r22, r22
 73e:	77 1f       	adc	r23, r23
 740:	88 1f       	adc	r24, r24
 742:	91 50       	subi	r25, 0x01	; 1
 744:	50 40       	sbci	r21, 0x00	; 0
 746:	a9 f7       	brne	.-22     	; 0x732 <__mulsf3_pse+0x64>
 748:	9e 3f       	cpi	r25, 0xFE	; 254
 74a:	51 05       	cpc	r21, r1
 74c:	70 f0       	brcs	.+28     	; 0x76a <__mulsf3_pse+0x9c>
 74e:	60 cf       	rjmp	.-320    	; 0x610 <__fp_inf>
 750:	aa cf       	rjmp	.-172    	; 0x6a6 <__fp_szero>
 752:	5f 3f       	cpi	r21, 0xFF	; 255
 754:	ec f3       	brlt	.-6      	; 0x750 <__mulsf3_pse+0x82>
 756:	98 3e       	cpi	r25, 0xE8	; 232
 758:	dc f3       	brlt	.-10     	; 0x750 <__mulsf3_pse+0x82>
 75a:	86 95       	lsr	r24
 75c:	77 95       	ror	r23
 75e:	67 95       	ror	r22
 760:	b7 95       	ror	r27
 762:	f7 95       	ror	r31
 764:	e7 95       	ror	r30
 766:	9f 5f       	subi	r25, 0xFF	; 255
 768:	c1 f7       	brne	.-16     	; 0x75a <__mulsf3_pse+0x8c>
 76a:	fe 2b       	or	r31, r30
 76c:	88 0f       	add	r24, r24
 76e:	91 1d       	adc	r25, r1
 770:	96 95       	lsr	r25
 772:	87 95       	ror	r24
 774:	97 f9       	bld	r25, 7
 776:	08 95       	ret

00000778 <__udivmodqi4>:
 778:	99 1b       	sub	r25, r25
 77a:	79 e0       	ldi	r23, 0x09	; 9
 77c:	04 c0       	rjmp	.+8      	; 0x786 <__udivmodqi4_ep>

0000077e <__udivmodqi4_loop>:
 77e:	99 1f       	adc	r25, r25
 780:	96 17       	cp	r25, r22
 782:	08 f0       	brcs	.+2      	; 0x786 <__udivmodqi4_ep>
 784:	96 1b       	sub	r25, r22

00000786 <__udivmodqi4_ep>:
 786:	88 1f       	adc	r24, r24
 788:	7a 95       	dec	r23
 78a:	c9 f7       	brne	.-14     	; 0x77e <__udivmodqi4_loop>
 78c:	80 95       	com	r24
 78e:	08 95       	ret

00000790 <__divmodhi4>:
 790:	97 fb       	bst	r25, 7
 792:	09 2e       	mov	r0, r25
 794:	07 26       	eor	r0, r23
 796:	0a d0       	rcall	.+20     	; 0x7ac <__divmodhi4_neg1>
 798:	77 fd       	sbrc	r23, 7
 79a:	04 d0       	rcall	.+8      	; 0x7a4 <__divmodhi4_neg2>
 79c:	2e d0       	rcall	.+92     	; 0x7fa <__udivmodhi4>
 79e:	06 d0       	rcall	.+12     	; 0x7ac <__divmodhi4_neg1>
 7a0:	00 20       	and	r0, r0
 7a2:	1a f4       	brpl	.+6      	; 0x7aa <__divmodhi4_exit>

000007a4 <__divmodhi4_neg2>:
 7a4:	70 95       	com	r23
 7a6:	61 95       	neg	r22
 7a8:	7f 4f       	sbci	r23, 0xFF	; 255

000007aa <__divmodhi4_exit>:
 7aa:	08 95       	ret

000007ac <__divmodhi4_neg1>:
 7ac:	f6 f7       	brtc	.-4      	; 0x7aa <__divmodhi4_exit>
 7ae:	90 95       	com	r25
 7b0:	81 95       	neg	r24
 7b2:	9f 4f       	sbci	r25, 0xFF	; 255
 7b4:	08 95       	ret

000007b6 <__udivmodsi4>:
 7b6:	a1 e2       	ldi	r26, 0x21	; 33
 7b8:	1a 2e       	mov	r1, r26
 7ba:	aa 1b       	sub	r26, r26
 7bc:	bb 1b       	sub	r27, r27
 7be:	fd 01       	movw	r30, r26
 7c0:	0d c0       	rjmp	.+26     	; 0x7dc <__udivmodsi4_ep>

000007c2 <__udivmodsi4_loop>:
 7c2:	aa 1f       	adc	r26, r26
 7c4:	bb 1f       	adc	r27, r27
 7c6:	ee 1f       	adc	r30, r30
 7c8:	ff 1f       	adc	r31, r31
 7ca:	a2 17       	cp	r26, r18
 7cc:	b3 07       	cpc	r27, r19
 7ce:	e4 07       	cpc	r30, r20
 7d0:	f5 07       	cpc	r31, r21
 7d2:	20 f0       	brcs	.+8      	; 0x7dc <__udivmodsi4_ep>
 7d4:	a2 1b       	sub	r26, r18
 7d6:	b3 0b       	sbc	r27, r19
 7d8:	e4 0b       	sbc	r30, r20
 7da:	f5 0b       	sbc	r31, r21

000007dc <__udivmodsi4_ep>:
 7dc:	66 1f       	adc	r22, r22
 7de:	77 1f       	adc	r23, r23
 7e0:	88 1f       	adc	r24, r24
 7e2:	99 1f       	adc	r25, r25
 7e4:	1a 94       	dec	r1
 7e6:	69 f7       	brne	.-38     	; 0x7c2 <__udivmodsi4_loop>
 7e8:	60 95       	com	r22
 7ea:	70 95       	com	r23
 7ec:	80 95       	com	r24
 7ee:	90 95       	com	r25
 7f0:	9b 01       	movw	r18, r22
 7f2:	ac 01       	movw	r20, r24
 7f4:	bd 01       	movw	r22, r26
 7f6:	cf 01       	movw	r24, r30
 7f8:	08 95       	ret

000007fa <__udivmodhi4>:
 7fa:	aa 1b       	sub	r26, r26
 7fc:	bb 1b       	sub	r27, r27
 7fe:	51 e1       	ldi	r21, 0x11	; 17
 800:	07 c0       	rjmp	.+14     	; 0x810 <__udivmodhi4_ep>

00000802 <__udivmodhi4_loop>:
 802:	aa 1f       	adc	r26, r26
 804:	bb 1f       	adc	r27, r27
 806:	a6 17       	cp	r26, r22
 808:	b7 07       	cpc	r27, r23
 80a:	10 f0       	brcs	.+4      	; 0x810 <__udivmodhi4_ep>
 80c:	a6 1b       	sub	r26, r22
 80e:	b7 0b       	sbc	r27, r23

00000810 <__udivmodhi4_ep>:
 810:	88 1f       	adc	r24, r24
 812:	99 1f       	adc	r25, r25
 814:	5a 95       	dec	r21
 816:	a9 f7       	brne	.-22     	; 0x802 <__udivmodhi4_loop>
 818:	80 95       	com	r24
 81a:	90 95       	com	r25
 81c:	bc 01       	movw	r22, r24
 81e:	cd 01       	movw	r24, r26
 820:	08 95       	ret

00000822 <_exit>:
 822:	f8 94       	cli

00000824 <__stop_program>:
 824:	ff cf       	rjmp	.-2      	; 0x824 <__stop_program>
