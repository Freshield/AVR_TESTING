
TEST4_TRAFFIC_LIGHT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000238  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000238  000002cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800062  00800062  000002ce  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00000a28  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000004cd  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000157  00000000  00000000  00000f75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002ff  00000000  00000000  000010cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ac  00000000  00000000  000013cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001b1  00000000  00000000  00001478  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ff  00000000  00000000  00001629  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e3       	ldi	r30, 0x38	; 56
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 36       	cpi	r26, 0x64	; 100
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
  8a:	0c 94 1a 01 	jmp	0x234	; 0x234 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z12delay_reducel>:

#define uchar unsigned char


void delay_reduce(long int delay)
{
  92:	dc 01       	movw	r26, r24
  94:	cb 01       	movw	r24, r22
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  96:	00 97       	sbiw	r24, 0x00	; 0
  98:	a1 05       	cpc	r26, r1
  9a:	b1 05       	cpc	r27, r1
  9c:	41 f0       	breq	.+16     	; 0xae <_Z12delay_reducel+0x1c>
	{
		delay--;
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	a1 09       	sbc	r26, r1
  a2:	b1 09       	sbc	r27, r1
		asm volatile ("nop");
  a4:	00 00       	nop
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  a6:	00 97       	sbiw	r24, 0x00	; 0
  a8:	a1 05       	cpc	r26, r1
  aa:	b1 05       	cpc	r27, r1
  ac:	c1 f7       	brne	.-16     	; 0x9e <_Z12delay_reducel+0xc>
  ae:	08 95       	ret

000000b0 <_Z12delay_secondi>:

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	41 f4       	brne	.+16     	; 0xc4 <_Z12delay_secondi+0x14>
  b4:	08 95       	ret
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	30 40       	sbci	r19, 0x00	; 0
	{
		for(j=65535;j!=0;j--);
  ba:	e9 f7       	brne	.-6      	; 0xb6 <_Z12delay_secondi+0x6>
		{
			asm volatile ("nop");
  bc:	00 00       	nop

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	19 f4       	brne	.+6      	; 0xc8 <_Z12delay_secondi+0x18>
  c2:	08 95       	ret
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  c4:	4f ef       	ldi	r20, 0xFF	; 255
  c6:	5f ef       	ldi	r21, 0xFF	; 255
  c8:	9a 01       	movw	r18, r20
  ca:	f5 cf       	rjmp	.-22     	; 0xb6 <_Z12delay_secondi+0x6>

000000cc <_Z8LED_INITv>:

//************初始化
void LED_INIT()
{
	
	LED_DDR = 0XFF;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8a bb       	out	0x1a, r24	; 26
	
	LED_PORT = 0X00;
  d0:	1b ba       	out	0x1b, r1	; 27
	
	
}
  d2:	08 95       	ret

000000d4 <_Z9LED_TWINKh>:


//********指定位取反
void LED_TWINK(uchar num)
{
	LED_PORT ^= 1 << num;//********指定位取反
  d4:	4b b3       	in	r20, 0x1b	; 27
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	b9 01       	movw	r22, r18
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <_Z9LED_TWINKh+0xe>
  de:	66 0f       	add	r22, r22
  e0:	77 1f       	adc	r23, r23
  e2:	8a 95       	dec	r24
  e4:	e2 f7       	brpl	.-8      	; 0xde <_Z9LED_TWINKh+0xa>
  e6:	cb 01       	movw	r24, r22
  e8:	84 27       	eor	r24, r20
  ea:	8b bb       	out	0x1b, r24	; 27
}
  ec:	08 95       	ret

000000ee <_Z9LED_BLINKhh>:


//****************指定位闪烁
void LED_BLINK(uchar num,uchar time)
{
  ee:	0f 93       	push	r16
  f0:	1f 93       	push	r17
  f2:	cf 93       	push	r28
  f4:	c6 2f       	mov	r28, r22
	LED_DDR |= 1 << num;//******指定位为输出
  f6:	9a b3       	in	r25, 0x1a	; 26
  f8:	01 e0       	ldi	r16, 0x01	; 1
  fa:	10 e0       	ldi	r17, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <_Z9LED_BLINKhh+0x14>
  fe:	00 0f       	add	r16, r16
 100:	11 1f       	adc	r17, r17
 102:	8a 95       	dec	r24
 104:	e2 f7       	brpl	.-8      	; 0xfe <_Z9LED_BLINKhh+0x10>
 106:	80 2f       	mov	r24, r16
 108:	90 2b       	or	r25, r16
 10a:	9a bb       	out	0x1a, r25	; 26
	
	LED_PORT |= 1 << num;//********指定位为点亮
 10c:	9b b3       	in	r25, 0x1b	; 27
 10e:	89 2b       	or	r24, r25
 110:	8b bb       	out	0x1b, r24	; 27
	
	delay_second(time);
 112:	86 2f       	mov	r24, r22
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
	
	LED_PORT &= ~(1 << num);//*******指定位为灭
 11a:	8b b3       	in	r24, 0x1b	; 27
 11c:	00 95       	com	r16
 11e:	08 23       	and	r16, r24
 120:	0b bb       	out	0x1b, r16	; 27
	
	delay_second(time);
 122:	8c 2f       	mov	r24, r28
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
	
	
}
 12a:	cf 91       	pop	r28
 12c:	1f 91       	pop	r17
 12e:	0f 91       	pop	r16
 130:	08 95       	ret

00000132 <_Z8LED_FLOWv>:


/*********************流水灯*********************/

void LED_FLOW()
{
 132:	cf 93       	push	r28
	LED_DDR = 0XFF;
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	8a bb       	out	0x1a, r24	; 26
	LED_PORT = 0x01;
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	c8 e0       	ldi	r28, 0x08	; 8
	for(uchar K = 0;K < 8;K ++)
	{
		delay_second(5);
 13e:	85 e0       	ldi	r24, 0x05	; 5
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
		
		LED_PORT = LED_PORT <<1;
 146:	8b b3       	in	r24, 0x1b	; 27
 148:	88 0f       	add	r24, r24
 14a:	8b bb       	out	0x1b, r24	; 27
 14c:	c1 50       	subi	r28, 0x01	; 1

void LED_FLOW()
{
	LED_DDR = 0XFF;
	LED_PORT = 0x01;
	for(uchar K = 0;K < 8;K ++)
 14e:	b9 f7       	brne	.-18     	; 0x13e <_Z8LED_FLOWv+0xc>
		LED_PORT = LED_PORT <<1;
		
		
		 
	}
}
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <_Z15LED_LEFT_CIRCLEv>:

//*************循环左移
void LED_LEFT_CIRCLE()
{
	if (LED_PORT & 0X80)
 154:	df 9b       	sbis	0x1b, 7	; 27
 156:	05 c0       	rjmp	.+10     	; 0x162 <_Z15LED_LEFT_CIRCLEv+0xe>
	{
		LED_PORT = (LED_PORT << 1)| 0X01;
 158:	8b b3       	in	r24, 0x1b	; 27
 15a:	88 0f       	add	r24, r24
 15c:	81 60       	ori	r24, 0x01	; 1
 15e:	8b bb       	out	0x1b, r24	; 27
 160:	08 95       	ret
	
	else
	
	
	
	LED_PORT <<= 1;
 162:	8b b3       	in	r24, 0x1b	; 27
 164:	88 0f       	add	r24, r24
 166:	8b bb       	out	0x1b, r24	; 27
 168:	08 95       	ret

0000016a <main>:
uchar MODEL,FLASH_COUNT = 0;


int main(void)
{
	LED_INIT();
 16a:	0e 94 66 00 	call	0xcc	; 0xcc <_Z8LED_INITv>
	
	
    while(1)
    {
       switch (MODEL)
 16e:	da e0       	ldi	r29, 0x0A	; 10
		
		
		
		FLASH_COUNT = 0;
		
		MODEL = 2;
 170:	ff 24       	eor	r15, r15
 172:	68 94       	set
 174:	f1 f8       	bld	r15, 1
	   
	   RED_WEST_OFF;YELLOW_WEST_OFF;GREEN_WEST_ON;
	   
	   delay_second(100);
	   
	   MODEL = 1;
 176:	01 e0       	ldi	r16, 0x01	; 1
		
		RED_WEST_ON;YELLOW_WEST_OFF;GREEN_WEST_OFF;
		
		delay_second(100);
		
		MODEL = 3;
 178:	13 e0       	ldi	r17, 0x03	; 3
	LED_INIT();
	
	
    while(1)
    {
       switch (MODEL)
 17a:	80 91 63 00 	lds	r24, 0x0063
 17e:	81 30       	cpi	r24, 0x01	; 1
 180:	a1 f0       	breq	.+40     	; 0x1aa <main+0x40>
 182:	81 30       	cpi	r24, 0x01	; 1
 184:	28 f0       	brcs	.+10     	; 0x190 <main+0x26>
 186:	82 30       	cpi	r24, 0x02	; 2
 188:	61 f1       	breq	.+88     	; 0x1e2 <main+0x78>
 18a:	83 30       	cpi	r24, 0x03	; 3
 18c:	c1 f7       	brne	.-16     	; 0x17e <main+0x14>
 18e:	36 c0       	rjmp	.+108    	; 0x1fc <main+0x92>
       {
		   //-----------------------------------------------------------
       case 0:
	   
	   RED_NORTH_ON;YELLOW_NORTH_OFF;GREEN_NORTH_OFF;
 190:	d8 9a       	sbi	0x1b, 0	; 27
 192:	d9 98       	cbi	0x1b, 1	; 27
 194:	da 98       	cbi	0x1b, 2	; 27
	   
	   RED_WEST_OFF;YELLOW_WEST_OFF;GREEN_WEST_ON;
 196:	db 98       	cbi	0x1b, 3	; 27
 198:	dc 98       	cbi	0x1b, 4	; 27
 19a:	dd 9a       	sbi	0x1b, 5	; 27
	   
	   delay_second(100);
 19c:	84 e6       	ldi	r24, 0x64	; 100
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
	   
	   MODEL = 1;
 1a4:	00 93 63 00 	sts	0x0063, r16
	   
       	break;
 1a8:	e8 cf       	rjmp	.-48     	; 0x17a <main+0x10>
	LED_INIT();
	
	
    while(1)
    {
       switch (MODEL)
 1aa:	cd 2f       	mov	r28, r29
		//-----------------------------------------------------------   
		case 1:
		
		for (uchar i = 0;i < 10;i ++)
		{
			RED_NORTH_ON;YELLOW_NORTH_OFF;GREEN_NORTH_OFF;
 1ac:	d8 9a       	sbi	0x1b, 0	; 27
 1ae:	d9 98       	cbi	0x1b, 1	; 27
 1b0:	da 98       	cbi	0x1b, 2	; 27
			
			RED_WEST_OFF;YELLOW_WEST_ON;GREEN_WEST_ON;
 1b2:	db 98       	cbi	0x1b, 3	; 27
 1b4:	dc 9a       	sbi	0x1b, 4	; 27
 1b6:	dd 9a       	sbi	0x1b, 5	; 27
			
			delay_second(5);
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
			
			RED_NORTH_ON;YELLOW_NORTH_OFF;GREEN_NORTH_OFF;
 1c0:	d8 9a       	sbi	0x1b, 0	; 27
 1c2:	d9 98       	cbi	0x1b, 1	; 27
 1c4:	da 98       	cbi	0x1b, 2	; 27
			
			RED_WEST_OFF;YELLOW_WEST_OFF;GREEN_WEST_ON;
 1c6:	db 98       	cbi	0x1b, 3	; 27
 1c8:	dc 98       	cbi	0x1b, 4	; 27
 1ca:	dd 9a       	sbi	0x1b, 5	; 27
			
			delay_second(5);
 1cc:	85 e0       	ldi	r24, 0x05	; 5
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
 1d4:	c1 50       	subi	r28, 0x01	; 1
	   
       	break;
		//-----------------------------------------------------------   
		case 1:
		
		for (uchar i = 0;i < 10;i ++)
 1d6:	51 f7       	brne	.-44     	; 0x1ac <main+0x42>
			
		}
		
		
		
		FLASH_COUNT = 0;
 1d8:	10 92 62 00 	sts	0x0062, r1
		
		MODEL = 2;
 1dc:	f0 92 63 00 	sts	0x0063, r15
		
		break;
 1e0:	cc cf       	rjmp	.-104    	; 0x17a <main+0x10>
		//-----------------------------------------------------------
		case 2:
		
		RED_NORTH_OFF;YELLOW_NORTH_OFF;GREEN_NORTH_ON;
 1e2:	d8 98       	cbi	0x1b, 0	; 27
 1e4:	d9 98       	cbi	0x1b, 1	; 27
 1e6:	da 9a       	sbi	0x1b, 2	; 27
		
		RED_WEST_ON;YELLOW_WEST_OFF;GREEN_WEST_OFF;
 1e8:	db 9a       	sbi	0x1b, 3	; 27
 1ea:	dc 98       	cbi	0x1b, 4	; 27
 1ec:	dd 98       	cbi	0x1b, 5	; 27
		
		delay_second(100);
 1ee:	84 e6       	ldi	r24, 0x64	; 100
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
		
		MODEL = 3;
 1f6:	10 93 63 00 	sts	0x0063, r17
		
		break;
 1fa:	bf cf       	rjmp	.-130    	; 0x17a <main+0x10>
	LED_INIT();
	
	
    while(1)
    {
       switch (MODEL)
 1fc:	cd 2f       	mov	r28, r29
		//-----------------------------------------------------------
		case 3:
		
		for (uchar i = 0;i < 10;i ++)
		{
			RED_NORTH_OFF;YELLOW_NORTH_ON;GREEN_NORTH_ON;
 1fe:	d8 98       	cbi	0x1b, 0	; 27
 200:	d9 9a       	sbi	0x1b, 1	; 27
 202:	da 9a       	sbi	0x1b, 2	; 27
			
			RED_WEST_ON;YELLOW_WEST_OFF;GREEN_WEST_OFF;
 204:	db 9a       	sbi	0x1b, 3	; 27
 206:	dc 98       	cbi	0x1b, 4	; 27
 208:	dd 98       	cbi	0x1b, 5	; 27
			
			delay_second(5);
 20a:	85 e0       	ldi	r24, 0x05	; 5
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
			
			RED_NORTH_OFF;YELLOW_NORTH_OFF;GREEN_NORTH_ON;
 212:	d8 98       	cbi	0x1b, 0	; 27
 214:	d9 98       	cbi	0x1b, 1	; 27
 216:	da 9a       	sbi	0x1b, 2	; 27
			
			RED_WEST_ON;YELLOW_WEST_OFF;GREEN_WEST_OFF;
 218:	db 9a       	sbi	0x1b, 3	; 27
 21a:	dc 98       	cbi	0x1b, 4	; 27
 21c:	dd 98       	cbi	0x1b, 5	; 27
			
			delay_second(5);
 21e:	85 e0       	ldi	r24, 0x05	; 5
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
 226:	c1 50       	subi	r28, 0x01	; 1
		
		break;
		//-----------------------------------------------------------
		case 3:
		
		for (uchar i = 0;i < 10;i ++)
 228:	51 f7       	brne	.-44     	; 0x1fe <main+0x94>
			
		}
		
		
		
		FLASH_COUNT = 0;
 22a:	10 92 62 00 	sts	0x0062, r1
		
		MODEL = 0;
 22e:	10 92 63 00 	sts	0x0063, r1
		
		break;
 232:	a3 cf       	rjmp	.-186    	; 0x17a <main+0x10>

00000234 <_exit>:
 234:	f8 94       	cli

00000236 <__stop_program>:
 236:	ff cf       	rjmp	.-2      	; 0x236 <__stop_program>
