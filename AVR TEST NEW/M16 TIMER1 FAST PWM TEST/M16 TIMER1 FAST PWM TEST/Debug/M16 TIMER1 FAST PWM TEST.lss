
M16 TIMER1 FAST PWM TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000003b2  00000426  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000135c  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000045c  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00001be0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004ab  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000124  00000000  00000000  0000210b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e7  00000000  00000000  0000222f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f8  00000000  00000000  00002518  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000279  00000000  00000000  00002610  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001af  00000000  00000000  00002889  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_6>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__vector_8>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 eb       	ldi	r30, 0xB2	; 178
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  8a:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z12delay_reducel>:

#ifndef LIB_DELAY_H_
#define LIB_DELAY_H_

void delay_reduce(long int delay)
{
  92:	dc 01       	movw	r26, r24
  94:	cb 01       	movw	r24, r22
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  96:	00 97       	sbiw	r24, 0x00	; 0
  98:	a1 05       	cpc	r26, r1
  9a:	b1 05       	cpc	r27, r1
  9c:	41 f0       	breq	.+16     	; 0xae <_Z12delay_reducel+0x1c>
	{
		delay--;
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	a1 09       	sbc	r26, r1
  a2:	b1 09       	sbc	r27, r1
		asm volatile ("nop");
  a4:	00 00       	nop
    for(;delay > 1;delay--)
	{
		asm volatile ("nop");
	}
	*/
	while (delay)
  a6:	00 97       	sbiw	r24, 0x00	; 0
  a8:	a1 05       	cpc	r26, r1
  aa:	b1 05       	cpc	r27, r1
  ac:	c1 f7       	brne	.-16     	; 0x9e <_Z12delay_reducel+0xc>
  ae:	08 95       	ret

000000b0 <_Z12delay_secondi>:

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	41 f4       	brne	.+16     	; 0xc4 <_Z12delay_secondi+0x14>
  b4:	08 95       	ret
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	30 40       	sbci	r19, 0x00	; 0
	{
		for(j=65535;j!=0;j--);
  ba:	e9 f7       	brne	.-6      	; 0xb6 <_Z12delay_secondi+0x6>
		{
			asm volatile ("nop");
  bc:	00 00       	nop

void delay_second(int i) 
{
	
	int j;
	for(;i!=0;i--)
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	19 f4       	brne	.+6      	; 0xc8 <_Z12delay_secondi+0x18>
  c2:	08 95       	ret
		asm volatile ("nop");
	}
}

void delay_second(int i) 
{
  c4:	4f ef       	ldi	r20, 0xFF	; 255
  c6:	5f ef       	ldi	r21, 0xFF	; 255
  c8:	9a 01       	movw	r18, r20
  ca:	f5 cf       	rjmp	.-22     	; 0xb6 <_Z12delay_secondi+0x6>

000000cc <_Z24TIMER0_FASTPWM_OCR0_initv>:

//**********************FAST PWM OCR0模式初始化*******************//
void TIMER0_FASTPWM_OCR0_init()
{
	//端口初始化
	PWM_TIMER0_DDR|=(1<<PWM_TIMER0_OUT); 
  cc:	bb 9a       	sbi	0x17, 3	; 23
	//计数器初始化
	TCNT0=0x00;//OCR0 = 0X00;//***避免与bottom相同时候特殊情况
  ce:	12 be       	out	0x32, r1	; 50
	//中断初始化
	TIMSK |= (1<<OCIE0)|(1<<TOIE0);
  d0:	89 b7       	in	r24, 0x39	; 57
  d2:	83 60       	ori	r24, 0x03	; 3
  d4:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR0 |= (1 << WGM00) | (1 << WGM01) | (1 << COM01) | (1 << COM00) | (1 << CS02) | (1 << CS00);//设置为快速PWM；与OCR0匹配时将清零；1024分频
  d6:	83 b7       	in	r24, 0x33	; 51
  d8:	8d 67       	ori	r24, 0x7D	; 125
  da:	83 bf       	out	0x33, r24	; 51
	
	
}
  dc:	08 95       	ret

000000de <_Z24TIMER0_FASTPWMA_OCR0_setj>:
//********************FAST PWM ICR0模式时间设定*********************//
uint TIMER0_FASTPWMA_OCR0_set(uint compare_time)
{
	OCR0=F_CPU/1024*compare_time;
  de:	82 95       	swap	r24
  e0:	88 0f       	add	r24, r24
  e2:	80 7e       	andi	r24, 0xE0	; 224
  e4:	8c bf       	out	0x3c, r24	; 60
	
}
  e6:	08 95       	ret

000000e8 <_Z25TIMER1_FASTPWMA_ICR1_initv>:

//**********************FAST PWM ICR1模式初始化*******************//
void TIMER1_FASTPWMA_ICR1_init()
{
	//端口初始化
	PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
  e8:	8d 9a       	sbi	0x11, 5	; 17
  ea:	95 98       	cbi	0x12, 5	; 18
	//计数器初始化
	TCNT1 = 0x00;
  ec:	1d bc       	out	0x2d, r1	; 45
  ee:	1c bc       	out	0x2c, r1	; 44
	//中断初始化
	TIMSK |= (1<<OCIE1A)|(1<<TOIE1);
  f0:	89 b7       	in	r24, 0x39	; 57
  f2:	84 61       	ori	r24, 0x14	; 20
  f4:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR1A |= (1<<COM1A1)|(1<<WGM11);//比较匹配清零 TOP置位 
  f6:	8f b5       	in	r24, 0x2f	; 47
  f8:	82 68       	ori	r24, 0x82	; 130
  fa:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS12);//TOP为ICR1的值 1024分频
  fc:	8e b5       	in	r24, 0x2e	; 46
  fe:	8d 61       	ori	r24, 0x1D	; 29
 100:	8e bd       	out	0x2e, r24	; 46
	
	
}
 102:	08 95       	ret

00000104 <_Z24TIMER1_FASTPWMA_ICR1_setff>:
//********************FAST PWM ICR1模式时间设定*********************//
void TIMER1_FASTPWMA_ICR1_set(float compare_time,float top_time)
{
 104:	cf 92       	push	r12
 106:	df 92       	push	r13
 108:	ef 92       	push	r14
 10a:	ff 92       	push	r15
 10c:	69 01       	movw	r12, r18
 10e:	7a 01       	movw	r14, r20
	OCR1A=F_CPU/1024*compare_time;
 110:	20 e0       	ldi	r18, 0x00	; 0
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	41 ee       	ldi	r20, 0xE1	; 225
 116:	55 e4       	ldi	r21, 0x45	; 69
 118:	0e 94 4c 01 	call	0x298	; 0x298 <__mulsf3>
 11c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <__fixunssfsi>
 120:	dc 01       	movw	r26, r24
 122:	cb 01       	movw	r24, r22
 124:	9b bd       	out	0x2b, r25	; 43
 126:	8a bd       	out	0x2a, r24	; 42
	ICR1=F_CPU/1024*top_time;
 128:	c7 01       	movw	r24, r14
 12a:	b6 01       	movw	r22, r12
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	41 ee       	ldi	r20, 0xE1	; 225
 132:	55 e4       	ldi	r21, 0x45	; 69
 134:	0e 94 4c 01 	call	0x298	; 0x298 <__mulsf3>
 138:	0e 94 f7 00 	call	0x1ee	; 0x1ee <__fixunssfsi>
 13c:	dc 01       	movw	r26, r24
 13e:	cb 01       	movw	r24, r22
 140:	97 bd       	out	0x27, r25	; 39
 142:	86 bd       	out	0x26, r24	; 38
}
 144:	ff 90       	pop	r15
 146:	ef 90       	pop	r14
 148:	df 90       	pop	r13
 14a:	cf 90       	pop	r12
 14c:	08 95       	ret

0000014e <_Z31TIMER1_PHASE_CORRECTION_10_initv>:

//**********************十位相位修正PWM模式初始化*******************//
void TIMER1_PHASE_CORRECTION_10_init()
{
	//端口初始化
	PWM_TIMER1_DDR |= (1<<PWM_TIMER1_OUTA);  PWM_TIMER1_PORT &= ~(1 << PWM_TIMER1_OUTA);
 14e:	8d 9a       	sbi	0x11, 5	; 17
 150:	95 98       	cbi	0x12, 5	; 18
	//计数器初始化
	TCNT1 = 0x00;OCR1A = 0X00;
 152:	1d bc       	out	0x2d, r1	; 45
 154:	1c bc       	out	0x2c, r1	; 44
 156:	1b bc       	out	0x2b, r1	; 43
 158:	1a bc       	out	0x2a, r1	; 42
	//中断初始化
	TIMSK |= (1<<OCIE1A)|(1<<TOIE1);
 15a:	89 b7       	in	r24, 0x39	; 57
 15c:	84 61       	ori	r24, 0x14	; 20
 15e:	89 bf       	out	0x39, r24	; 57
	//快速PWM模式设置
	TCCR1A |= (1<<COM1A1)|(1<<WGM11)|(1<<WGM10);//比较匹配清零 TOP置位
 160:	8f b5       	in	r24, 0x2f	; 47
 162:	83 68       	ori	r24, 0x83	; 131
 164:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1<<CS11);//TOP为ICR1的值 8分频
 166:	8e b5       	in	r24, 0x2e	; 46
 168:	82 60       	ori	r24, 0x02	; 2
 16a:	8e bd       	out	0x2e, r24	; 46
	
	
}
 16c:	08 95       	ret

0000016e <_Z8led_flowv>:


/*********************流水灯*********************/

void led_flow()
{
 16e:	cf 93       	push	r28
	LED_DDR = 0XFF;
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	8a bb       	out	0x1a, r24	; 26
	LED_PORT = 0x01;
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	8b bb       	out	0x1b, r24	; 27
 178:	c8 e0       	ldi	r28, 0x08	; 8
	for(uchar K = 0;K < 8;K ++)
	{
		delay_second(30);
 17a:	8e e1       	ldi	r24, 0x1E	; 30
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
		
		LED_PORT = LED_PORT <<1;
 182:	8b b3       	in	r24, 0x1b	; 27
 184:	88 0f       	add	r24, r24
 186:	8b bb       	out	0x1b, r24	; 27
 188:	c1 50       	subi	r28, 0x01	; 1

void led_flow()
{
	LED_DDR = 0XFF;
	LED_PORT = 0x01;
	for(uchar K = 0;K < 8;K ++)
 18a:	b9 f7       	brne	.-18     	; 0x17a <_Z8led_flowv+0xc>
		LED_PORT = LED_PORT <<1;
		
		
		 
	}
}
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <__vector_6>:
#include <E:\kuaipan\EDEN\avr\system\lib_delay.h>
#include <E:\kuaipan\EDEN\avr\function\lib_pwm.h>
#include <E:\kuaipan\EDEN\avr\device\lib_led.h>

ISR(TIMER1_COMPA_vect)
{
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
	
	
}
 19a:	0f 90       	pop	r0
 19c:	0f be       	out	0x3f, r0	; 63
 19e:	0f 90       	pop	r0
 1a0:	1f 90       	pop	r1
 1a2:	18 95       	reti

000001a4 <__vector_8>:

ISR(TIMER1_OVF_vect)
{
 1a4:	1f 92       	push	r1
 1a6:	0f 92       	push	r0
 1a8:	0f b6       	in	r0, 0x3f	; 63
 1aa:	0f 92       	push	r0
 1ac:	11 24       	eor	r1, r1
	 
}
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <main>:

 
int main(void)
{
	
	TIMER1_PHASE_CORRECTION_10_init();
 1b8:	0e 94 a7 00 	call	0x14e	; 0x14e <_Z31TIMER1_PHASE_CORRECTION_10_initv>
	
	sei(); 
 1bc:	78 94       	sei
	
    while(1)
    {
      
	 for (uchar i = 0;i <10;i ++)
 1be:	c0 e0       	ldi	r28, 0x00	; 0
 1c0:	d0 e0       	ldi	r29, 0x00	; 0
	   {
		   delay_second(30);
 1c2:	8e e1       	ldi	r24, 0x1E	; 30
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
		   
		   OCR1A = i * 128;
 1ca:	8c 2f       	mov	r24, r28
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	96 95       	lsr	r25
 1d0:	98 2f       	mov	r25, r24
 1d2:	88 27       	eor	r24, r24
 1d4:	97 95       	ror	r25
 1d6:	87 95       	ror	r24
 1d8:	9b bd       	out	0x2b, r25	; 43
 1da:	8a bd       	out	0x2a, r24	; 42
		   
		   delay_second(30);
 1dc:	8e e1       	ldi	r24, 0x1E	; 30
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z12delay_secondi>
	sei(); 
	
    while(1)
    {
      
	 for (uchar i = 0;i <10;i ++)
 1e4:	cf 5f       	subi	r28, 0xFF	; 255
 1e6:	ca 30       	cpi	r28, 0x0A	; 10
 1e8:	60 f3       	brcs	.-40     	; 0x1c2 <main+0xa>
 1ea:	cd 2f       	mov	r28, r29
 1ec:	ea cf       	rjmp	.-44     	; 0x1c2 <main+0xa>

000001ee <__fixunssfsi>:
 1ee:	33 d0       	rcall	.+102    	; 0x256 <__fp_splitA>
 1f0:	88 f0       	brcs	.+34     	; 0x214 <__fixunssfsi+0x26>
 1f2:	9f 57       	subi	r25, 0x7F	; 127
 1f4:	90 f0       	brcs	.+36     	; 0x21a <__fixunssfsi+0x2c>
 1f6:	b9 2f       	mov	r27, r25
 1f8:	99 27       	eor	r25, r25
 1fa:	b7 51       	subi	r27, 0x17	; 23
 1fc:	a0 f0       	brcs	.+40     	; 0x226 <__fixunssfsi+0x38>
 1fe:	d1 f0       	breq	.+52     	; 0x234 <__fixunssfsi+0x46>
 200:	66 0f       	add	r22, r22
 202:	77 1f       	adc	r23, r23
 204:	88 1f       	adc	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	1a f0       	brmi	.+6      	; 0x210 <__fixunssfsi+0x22>
 20a:	ba 95       	dec	r27
 20c:	c9 f7       	brne	.-14     	; 0x200 <__fixunssfsi+0x12>
 20e:	12 c0       	rjmp	.+36     	; 0x234 <__fixunssfsi+0x46>
 210:	b1 30       	cpi	r27, 0x01	; 1
 212:	81 f0       	breq	.+32     	; 0x234 <__fixunssfsi+0x46>
 214:	3a d0       	rcall	.+116    	; 0x28a <__fp_zero>
 216:	b1 e0       	ldi	r27, 0x01	; 1
 218:	08 95       	ret
 21a:	37 c0       	rjmp	.+110    	; 0x28a <__fp_zero>
 21c:	67 2f       	mov	r22, r23
 21e:	78 2f       	mov	r23, r24
 220:	88 27       	eor	r24, r24
 222:	b8 5f       	subi	r27, 0xF8	; 248
 224:	39 f0       	breq	.+14     	; 0x234 <__fixunssfsi+0x46>
 226:	b9 3f       	cpi	r27, 0xF9	; 249
 228:	cc f3       	brlt	.-14     	; 0x21c <__fixunssfsi+0x2e>
 22a:	86 95       	lsr	r24
 22c:	77 95       	ror	r23
 22e:	67 95       	ror	r22
 230:	b3 95       	inc	r27
 232:	d9 f7       	brne	.-10     	; 0x22a <__fixunssfsi+0x3c>
 234:	3e f4       	brtc	.+14     	; 0x244 <__fixunssfsi+0x56>
 236:	90 95       	com	r25
 238:	80 95       	com	r24
 23a:	70 95       	com	r23
 23c:	61 95       	neg	r22
 23e:	7f 4f       	sbci	r23, 0xFF	; 255
 240:	8f 4f       	sbci	r24, 0xFF	; 255
 242:	9f 4f       	sbci	r25, 0xFF	; 255
 244:	08 95       	ret

00000246 <__fp_split3>:
 246:	57 fd       	sbrc	r21, 7
 248:	90 58       	subi	r25, 0x80	; 128
 24a:	44 0f       	add	r20, r20
 24c:	55 1f       	adc	r21, r21
 24e:	59 f0       	breq	.+22     	; 0x266 <__fp_splitA+0x10>
 250:	5f 3f       	cpi	r21, 0xFF	; 255
 252:	71 f0       	breq	.+28     	; 0x270 <__fp_splitA+0x1a>
 254:	47 95       	ror	r20

00000256 <__fp_splitA>:
 256:	88 0f       	add	r24, r24
 258:	97 fb       	bst	r25, 7
 25a:	99 1f       	adc	r25, r25
 25c:	61 f0       	breq	.+24     	; 0x276 <__fp_splitA+0x20>
 25e:	9f 3f       	cpi	r25, 0xFF	; 255
 260:	79 f0       	breq	.+30     	; 0x280 <__fp_splitA+0x2a>
 262:	87 95       	ror	r24
 264:	08 95       	ret
 266:	12 16       	cp	r1, r18
 268:	13 06       	cpc	r1, r19
 26a:	14 06       	cpc	r1, r20
 26c:	55 1f       	adc	r21, r21
 26e:	f2 cf       	rjmp	.-28     	; 0x254 <__fp_split3+0xe>
 270:	46 95       	lsr	r20
 272:	f1 df       	rcall	.-30     	; 0x256 <__fp_splitA>
 274:	08 c0       	rjmp	.+16     	; 0x286 <__fp_splitA+0x30>
 276:	16 16       	cp	r1, r22
 278:	17 06       	cpc	r1, r23
 27a:	18 06       	cpc	r1, r24
 27c:	99 1f       	adc	r25, r25
 27e:	f1 cf       	rjmp	.-30     	; 0x262 <__fp_splitA+0xc>
 280:	86 95       	lsr	r24
 282:	71 05       	cpc	r23, r1
 284:	61 05       	cpc	r22, r1
 286:	08 94       	sec
 288:	08 95       	ret

0000028a <__fp_zero>:
 28a:	e8 94       	clt

0000028c <__fp_szero>:
 28c:	bb 27       	eor	r27, r27
 28e:	66 27       	eor	r22, r22
 290:	77 27       	eor	r23, r23
 292:	cb 01       	movw	r24, r22
 294:	97 f9       	bld	r25, 7
 296:	08 95       	ret

00000298 <__mulsf3>:
 298:	0b d0       	rcall	.+22     	; 0x2b0 <__mulsf3x>
 29a:	78 c0       	rjmp	.+240    	; 0x38c <__fp_round>
 29c:	69 d0       	rcall	.+210    	; 0x370 <__fp_pscA>
 29e:	28 f0       	brcs	.+10     	; 0x2aa <__mulsf3+0x12>
 2a0:	6e d0       	rcall	.+220    	; 0x37e <__fp_pscB>
 2a2:	18 f0       	brcs	.+6      	; 0x2aa <__mulsf3+0x12>
 2a4:	95 23       	and	r25, r21
 2a6:	09 f0       	breq	.+2      	; 0x2aa <__mulsf3+0x12>
 2a8:	5a c0       	rjmp	.+180    	; 0x35e <__fp_inf>
 2aa:	5f c0       	rjmp	.+190    	; 0x36a <__fp_nan>
 2ac:	11 24       	eor	r1, r1
 2ae:	ee cf       	rjmp	.-36     	; 0x28c <__fp_szero>

000002b0 <__mulsf3x>:
 2b0:	ca df       	rcall	.-108    	; 0x246 <__fp_split3>
 2b2:	a0 f3       	brcs	.-24     	; 0x29c <__mulsf3+0x4>

000002b4 <__mulsf3_pse>:
 2b4:	95 9f       	mul	r25, r21
 2b6:	d1 f3       	breq	.-12     	; 0x2ac <__mulsf3+0x14>
 2b8:	95 0f       	add	r25, r21
 2ba:	50 e0       	ldi	r21, 0x00	; 0
 2bc:	55 1f       	adc	r21, r21
 2be:	62 9f       	mul	r22, r18
 2c0:	f0 01       	movw	r30, r0
 2c2:	72 9f       	mul	r23, r18
 2c4:	bb 27       	eor	r27, r27
 2c6:	f0 0d       	add	r31, r0
 2c8:	b1 1d       	adc	r27, r1
 2ca:	63 9f       	mul	r22, r19
 2cc:	aa 27       	eor	r26, r26
 2ce:	f0 0d       	add	r31, r0
 2d0:	b1 1d       	adc	r27, r1
 2d2:	aa 1f       	adc	r26, r26
 2d4:	64 9f       	mul	r22, r20
 2d6:	66 27       	eor	r22, r22
 2d8:	b0 0d       	add	r27, r0
 2da:	a1 1d       	adc	r26, r1
 2dc:	66 1f       	adc	r22, r22
 2de:	82 9f       	mul	r24, r18
 2e0:	22 27       	eor	r18, r18
 2e2:	b0 0d       	add	r27, r0
 2e4:	a1 1d       	adc	r26, r1
 2e6:	62 1f       	adc	r22, r18
 2e8:	73 9f       	mul	r23, r19
 2ea:	b0 0d       	add	r27, r0
 2ec:	a1 1d       	adc	r26, r1
 2ee:	62 1f       	adc	r22, r18
 2f0:	83 9f       	mul	r24, r19
 2f2:	a0 0d       	add	r26, r0
 2f4:	61 1d       	adc	r22, r1
 2f6:	22 1f       	adc	r18, r18
 2f8:	74 9f       	mul	r23, r20
 2fa:	33 27       	eor	r19, r19
 2fc:	a0 0d       	add	r26, r0
 2fe:	61 1d       	adc	r22, r1
 300:	23 1f       	adc	r18, r19
 302:	84 9f       	mul	r24, r20
 304:	60 0d       	add	r22, r0
 306:	21 1d       	adc	r18, r1
 308:	82 2f       	mov	r24, r18
 30a:	76 2f       	mov	r23, r22
 30c:	6a 2f       	mov	r22, r26
 30e:	11 24       	eor	r1, r1
 310:	9f 57       	subi	r25, 0x7F	; 127
 312:	50 40       	sbci	r21, 0x00	; 0
 314:	8a f0       	brmi	.+34     	; 0x338 <__mulsf3_pse+0x84>
 316:	e1 f0       	breq	.+56     	; 0x350 <__mulsf3_pse+0x9c>
 318:	88 23       	and	r24, r24
 31a:	4a f0       	brmi	.+18     	; 0x32e <__mulsf3_pse+0x7a>
 31c:	ee 0f       	add	r30, r30
 31e:	ff 1f       	adc	r31, r31
 320:	bb 1f       	adc	r27, r27
 322:	66 1f       	adc	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	91 50       	subi	r25, 0x01	; 1
 32a:	50 40       	sbci	r21, 0x00	; 0
 32c:	a9 f7       	brne	.-22     	; 0x318 <__mulsf3_pse+0x64>
 32e:	9e 3f       	cpi	r25, 0xFE	; 254
 330:	51 05       	cpc	r21, r1
 332:	70 f0       	brcs	.+28     	; 0x350 <__mulsf3_pse+0x9c>
 334:	14 c0       	rjmp	.+40     	; 0x35e <__fp_inf>
 336:	aa cf       	rjmp	.-172    	; 0x28c <__fp_szero>
 338:	5f 3f       	cpi	r21, 0xFF	; 255
 33a:	ec f3       	brlt	.-6      	; 0x336 <__mulsf3_pse+0x82>
 33c:	98 3e       	cpi	r25, 0xE8	; 232
 33e:	dc f3       	brlt	.-10     	; 0x336 <__mulsf3_pse+0x82>
 340:	86 95       	lsr	r24
 342:	77 95       	ror	r23
 344:	67 95       	ror	r22
 346:	b7 95       	ror	r27
 348:	f7 95       	ror	r31
 34a:	e7 95       	ror	r30
 34c:	9f 5f       	subi	r25, 0xFF	; 255
 34e:	c1 f7       	brne	.-16     	; 0x340 <__mulsf3_pse+0x8c>
 350:	fe 2b       	or	r31, r30
 352:	88 0f       	add	r24, r24
 354:	91 1d       	adc	r25, r1
 356:	96 95       	lsr	r25
 358:	87 95       	ror	r24
 35a:	97 f9       	bld	r25, 7
 35c:	08 95       	ret

0000035e <__fp_inf>:
 35e:	97 f9       	bld	r25, 7
 360:	9f 67       	ori	r25, 0x7F	; 127
 362:	80 e8       	ldi	r24, 0x80	; 128
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	08 95       	ret

0000036a <__fp_nan>:
 36a:	9f ef       	ldi	r25, 0xFF	; 255
 36c:	80 ec       	ldi	r24, 0xC0	; 192
 36e:	08 95       	ret

00000370 <__fp_pscA>:
 370:	00 24       	eor	r0, r0
 372:	0a 94       	dec	r0
 374:	16 16       	cp	r1, r22
 376:	17 06       	cpc	r1, r23
 378:	18 06       	cpc	r1, r24
 37a:	09 06       	cpc	r0, r25
 37c:	08 95       	ret

0000037e <__fp_pscB>:
 37e:	00 24       	eor	r0, r0
 380:	0a 94       	dec	r0
 382:	12 16       	cp	r1, r18
 384:	13 06       	cpc	r1, r19
 386:	14 06       	cpc	r1, r20
 388:	05 06       	cpc	r0, r21
 38a:	08 95       	ret

0000038c <__fp_round>:
 38c:	09 2e       	mov	r0, r25
 38e:	03 94       	inc	r0
 390:	00 0c       	add	r0, r0
 392:	11 f4       	brne	.+4      	; 0x398 <__fp_round+0xc>
 394:	88 23       	and	r24, r24
 396:	52 f0       	brmi	.+20     	; 0x3ac <__fp_round+0x20>
 398:	bb 0f       	add	r27, r27
 39a:	40 f4       	brcc	.+16     	; 0x3ac <__fp_round+0x20>
 39c:	bf 2b       	or	r27, r31
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__fp_round+0x18>
 3a0:	60 ff       	sbrs	r22, 0
 3a2:	04 c0       	rjmp	.+8      	; 0x3ac <__fp_round+0x20>
 3a4:	6f 5f       	subi	r22, 0xFF	; 255
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <_exit>:
 3ae:	f8 94       	cli

000003b0 <__stop_program>:
 3b0:	ff cf       	rjmp	.-2      	; 0x3b0 <__stop_program>
